{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/Product/productImg.jsx\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport FsLightbox from 'fslightbox-react';\nimport { connect } from 'react-redux';\nimport { createSlide } from '../../store/actions/productActions';\n\nconst ProductImg = props => {\n  const _useState = useState({\n    toggler: false,\n    slide: 1,\n    lightboxImages: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        lightboxController = _useState2[0],\n        setLightboxController = _useState2[1];\n\n  useEffect(() => {\n    if (props.detail.images.length > 0) {\n      props.dispatch(createSlide(props.detail.images));\n    }\n  }, [props.detail.images]);\n\n  const renderItemImg = images => {\n    if (images.length > 0) {\n      return images[0].url;\n    } else {\n      return '/images/image_not_available.png';\n    }\n  };\n\n  const openLightboxOnSlide = pos => {\n    setLightboxController(_objectSpread({}, lightboxController, {\n      toggler: !lightboxController.toggler,\n      slide: pos\n    }));\n  }; // const handleLightBox = pos => {\n  //   if(state.lightboxImages.length > 0) {\n  //     setState({\n  //       ...state,\n  //       lightbox: true,\n  //       imagePos: pos\n  //     }\n  //   }\n  // }\n  // const handleCloseLightBox = () => {\n  //   setState({\n  //     ...state,\n  //     lightbox: false\n  //   })\n  // }\n\n\n  const showThumbs = () => props.product.slide.map((item, i) => i > 0 && React.createElement(Fragment, {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"thumb\",\n    onClick: () => openLightboxOnSlide(i + 1),\n    style: {\n      background: \"url(\".concat(item, \") no-repeat\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(FsLightbox, {\n    toggler: lightboxController.toggler,\n    slide: lightboxController.slide,\n    sources: props.product.slide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })));\n\n  const detail = props.detail;\n  console.log(lightboxController.lightboxImages);\n  return React.createElement(\"div\", {\n    className: \"product_image_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main_pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background: \"url(\".concat(renderItemImg(detail.images), \") no-repeat\")\n    },\n    onClick: () => openLightboxOnSlide(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"main_thumbs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, showThumbs()));\n};\n\nconst mapStateToProps = state => {\n  return {\n    product: state.product\n  };\n};\n\nexport default connect(mapStateToProps)(ProductImg);","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/Product/productImg.jsx"],"names":["React","useState","useEffect","Fragment","FsLightbox","connect","createSlide","ProductImg","props","toggler","slide","lightboxImages","lightboxController","setLightboxController","detail","images","length","dispatch","renderItemImg","url","openLightboxOnSlide","pos","showThumbs","product","map","item","i","background","console","log","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect, Fragment } from 'react'\nimport FsLightbox from 'fslightbox-react';\nimport { connect } from 'react-redux';\nimport { createSlide } from '../../store/actions/productActions'\n\nconst ProductImg = props => {\n\n  const [lightboxController, setLightboxController] = useState({ \n    toggler: false, \n    slide: 1,\n    lightboxImages: []\n    });\n\n  useEffect(() => {\n    if(props.detail.images.length > 0){\n     props.dispatch(createSlide(props.detail.images))}\n  }, [props.detail.images])\n\n  const renderItemImg = images => {\n    if(images.length > 0){\n      return images[0].url\n    } else {\n      return '/images/image_not_available.png'\n    }\n  }\n\n  const openLightboxOnSlide = pos => { \n    setLightboxController({\n    ...lightboxController,\n    toggler: !lightboxController.toggler, \n    slide: pos,\n    }); \n    }\n\n  // const handleLightBox = pos => {\n  //   if(state.lightboxImages.length > 0) {\n  //     setState({\n  //       ...state,\n  //       lightbox: true,\n  //       imagePos: pos\n  //     }\n  //   }\n  // }\n\n  // const handleCloseLightBox = () => {\n  //   setState({\n  //     ...state,\n  //     lightbox: false\n  //   })\n  // }\n\n  const showThumbs = () => (\n    props.product.slide.map((item,i) => (\n      i > 0 && \n      <Fragment key={i}>\n      <div\n        className=\"thumb\"\n        onClick={() => openLightboxOnSlide(i+1)}\n        style={{background: `url(${item}) no-repeat`}}\n      >\n      </div>\n      <FsLightbox \n        toggler={lightboxController.toggler} \n        slide={lightboxController.slide} \n        sources={props.product.slide} \n    /></Fragment>\n    ))\n  )\n\n  const {detail} = props;\n  console.log(lightboxController.lightboxImages)\n\n  return (\n    <div className=\"product_image_container\">\n      <div className=\"main_pic\">\n        <div\n          style={{background: `url(${renderItemImg(detail.images)}) no-repeat`}}\n          onClick={() => openLightboxOnSlide(1)}\n        >\n        </div>\n      </div>\n      <div className=\"main_thumbs\">\n        {showThumbs()}\n\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    product: state.product\n  };\n};\n\nexport default connect(mapStateToProps)(ProductImg)\n"]},"metadata":{},"sourceType":"module"}