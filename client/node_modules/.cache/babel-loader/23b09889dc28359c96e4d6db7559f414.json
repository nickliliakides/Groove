{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/shared/card.jsx\";\nimport React from 'react';\nimport MyButton from './button';\nimport { connect } from 'react-redux';\n\nconst Card = props => {\n  const renderCardImage = images => {\n    if (images.length > 0) {\n      return images[0].url;\n    } else {\n      return '/images/image_not_available.png';\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card_item_wrapper \".concat(props.grid),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      background: \"url(\".concat(renderCardImage(props.images), \") no-repeat\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"action_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.brand.name), React.createElement(\"div\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.name), React.createElement(\"div\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\xA3\", props.price)), props.grid && React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.description)), React.createElement(\"div\", {\n    className: \"actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"button_wrapp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(MyButton, {\n    type: \"default\",\n    altClass: \"card_link\",\n    title: \"View product\",\n    linkTo: \"/product/\".concat(props._id),\n    addStyles: {\n      margin: '10px 0 0 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button_wrapp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(MyButton, {\n    type: \"bag_link\",\n    runAction: () => {\n      console.log('added to cart');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = state => {};\n\nexport default connect(mapStateToProps)(Card);","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/shared/card.jsx"],"names":["React","MyButton","connect","Card","props","renderCardImage","images","length","url","grid","background","brand","name","price","description","_id","margin","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAEpB,QAAMC,eAAe,GAAGC,MAAM,IAAI;AAChC,QAAGA,MAAM,CAACC,MAAP,GAAgB,CAAnB,EAAqB;AACnB,aAAOD,MAAM,CAAC,CAAD,CAAN,CAAUE,GAAjB;AACD,KAFD,MAEO;AACL,aAAO,iCAAP;AACD;AACF,GAND;;AAQA,SACE;AAAK,IAAA,SAAS,8BAAuBJ,KAAK,CAACK,IAA7B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,gBAAQL,eAAe,CAACD,KAAK,CAACE,MAAP,CAAvB;AADL,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,KAAK,CAACO,KAAN,CAAYC,IAApC,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBR,KAAK,CAACQ,IAA7B,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyBR,KAAK,CAACS,KAA/B,CAHF,CADJ,EAOET,KAAK,CAACK,IAAN,IACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACU,WAAV,CADF,CARJ,EAYA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,QAAQ,EAAC,WAFX;AAGE,IAAA,KAAK,EAAC,cAHR;AAIE,IAAA,MAAM,qBAAcV,KAAK,CAACW,GAApB,CAJR;AAKE,IAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAE,MAAM;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAA6B,KAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CAZA,CARF,CADF;AAyCD,CAnDD;;AAqDA,MAAMC,eAAe,GAAGC,KAAK,IAAI,CAAE,CAAnC;;AAEA,eAAelB,OAAO,CAACiB,eAAD,CAAP,CAAyBhB,IAAzB,CAAf","sourcesContent":["import React from 'react'\nimport MyButton from './button';\nimport { connect } from 'react-redux';\n\nconst Card = props => {\n\n  const renderCardImage = images => {\n    if(images.length > 0){\n      return images[0].url\n    } else {\n      return '/images/image_not_available.png'\n    }\n  }\n\n  return (\n    <div className={`card_item_wrapper ${props.grid}`}>\n      <div \n        className=\"image\" \n        style={{\n          background:`url(${renderCardImage(props.images)}) no-repeat`\n        }}\n      >\n      </div>\n      <div className=\"action_container\">\n          <div className=\"tags\">\n            <div className=\"brand\">{props.brand.name}</div>\n            <div className=\"name\">{props.name}</div>\n            <div className=\"price\">Â£{props.price}</div>\n          </div>\n      {\n        props.grid &&\n          <div className=\"description\">\n            <p>{props.description}</p>\n          </div>\n      }\n      <div className=\"actions\">\n        <div className=\"button_wrapp\">\n          <MyButton\n            type=\"default\"\n            altClass=\"card_link\"\n            title=\"View product\"\n            linkTo={`/product/${props._id}`}\n            addStyles={{ margin: '10px 0 0 0' }}\n          />\n        </div>\n        <div className=\"button_wrapp\">\n          <MyButton\n            type=\"bag_link\"\n            runAction={() => {console.log('added to cart')}}\n          />\n        </div>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {}\n\nexport default connect(mapStateToProps)(Card)\n"]},"metadata":{},"sourceType":"module"}