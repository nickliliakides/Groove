{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/Product/productImg.jsx\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Lightbox from 'react-lightbox-component';\n\nconst ProductImg = props => {\n  const _useState = useState({\n    lightbox: false,\n    lightboxImages: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        lightboxController = _useState2[0],\n        setLightboxController = _useState2[1];\n\n  useEffect(() => {\n    let lightboxImages = [];\n\n    if (props.detail.images.length > 0) {\n      props.detail.images.forEach(item => {\n        lightboxImages.push({\n          src: \"\".concat(item.url),\n          title: '',\n          description: ''\n        });\n      });\n    }\n\n    setLightboxController(_objectSpread({}, lightboxController, {\n      lightboxImages\n    }));\n  }, [props.detail]);\n\n  const renderItemImg = images => {\n    if (images.length > 0) {\n      return images[0].url;\n    } else {\n      return '/images/image_not_available.png';\n    }\n  }; // const toggleModal = () => { \n  //   setLightboxController({\n  //   ...lightboxController,\n  //   modalIsOpen: !lightboxController.modalIsOpen, \n  //   }); \n  //   }\n  // const handleLightBox = pos => {\n  //   if(state.lightboxImages.length > 0) {\n  //     setState({\n  //       ...state,\n  //       lightbox: true,\n  //       imagePos: pos\n  //     }\n  //   }\n  // }\n  // const handleCloseLightBox = () => {\n  //   setState({\n  //     ...state,\n  //     lightbox: false\n  //   })\n  // }\n\n\n  const openLightbox = () => {\n    if (lightboxController.lightboxImages.length > 0) {\n      setLightboxController(_objectSpread({}, lightboxController, {\n        lightbox: true\n      }));\n    }\n  };\n\n  const showThumbs = () => lightboxController.lightboxImages.map((item, i) => i > 0 && React.createElement(\"div\", {\n    key: i,\n    className: \"thumb\",\n    onClick: () => openLightbox(),\n    style: {\n      background: \"url(\".concat(item.src, \") no-repeat\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n\n  const detail = props.detail;\n  console.log(lightboxController.lightboxImages);\n  return React.createElement(\"div\", {\n    className: \"product_image_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Lightbox, {\n    images: lightboxController.lightboxImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"main_pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background: \"url(\".concat(renderItemImg(detail.images), \") no-repeat\")\n    },\n    onClick: () => openLightbox(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"main_thumbs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, showThumbs()));\n};\n\nexport default ProductImg;","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/Product/productImg.jsx"],"names":["React","useState","useEffect","Fragment","Lightbox","ProductImg","props","lightbox","lightboxImages","lightboxController","setLightboxController","detail","images","length","forEach","item","push","src","url","title","description","renderItemImg","openLightbox","showThumbs","map","i","background","console","log"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect, Fragment } from 'react'\nimport Lightbox from 'react-lightbox-component';\n\nconst ProductImg = props => {\n\n  const [lightboxController, setLightboxController] = useState({ \n    lightbox: false, \n    lightboxImages: []\n    });\n\n  useEffect(() => {\n    let lightboxImages = [];\n    if(props.detail.images.length > 0){\n      \n      props.detail.images.forEach(item => {\n        lightboxImages.push({src: `${item.url}`, title:'', description:''})\n      })\n    }\n\n    setLightboxController({\n      ...lightboxController,\n      lightboxImages\n    })\n  }, [props.detail])\n\n  const renderItemImg = images => {\n    if(images.length > 0){\n      return images[0].url\n    } else {\n      return '/images/image_not_available.png'\n    }\n  }\n\n  // const toggleModal = () => { \n    \n  //   setLightboxController({\n  //   ...lightboxController,\n  //   modalIsOpen: !lightboxController.modalIsOpen, \n  //   }); \n  //   }\n\n  // const handleLightBox = pos => {\n  //   if(state.lightboxImages.length > 0) {\n  //     setState({\n  //       ...state,\n  //       lightbox: true,\n  //       imagePos: pos\n  //     }\n  //   }\n  // }\n\n  // const handleCloseLightBox = () => {\n  //   setState({\n  //     ...state,\n  //     lightbox: false\n  //   })\n  // }\n\n  const openLightbox = () => {\n    if(lightboxController.lightboxImages.length > 0){\n      setLightboxController({\n        ...lightboxController,\n        lightbox: true\n      })\n    }\n  }\n\n  const showThumbs = () => (\n    lightboxController.lightboxImages.map((item,i) => (\n      i > 0 && \n      <div\n        key={i}\n        className=\"thumb\"\n        onClick={() => openLightbox()}\n        style={{background: `url(${item.src}) no-repeat`}}\n      >\n      </div>  \n    ))\n  )\n\n  const {detail} = props;\n  console.log(lightboxController.lightboxImages)\n\n  return (\n    <div className=\"product_image_container\">\n      <Lightbox\n        images={lightboxController.lightboxImages}\n      />\n      <div className=\"main_pic\">\n        <div\n          style={{background: `url(${renderItemImg(detail.images)}) no-repeat`}}\n          onClick={() => openLightbox()}\n        >\n        </div>\n      </div>\n      <div className=\"main_thumbs\">\n        {showThumbs()}\n      </div>\n    </div>\n  )\n}\n\nexport default ProductImg\n"]},"metadata":{},"sourceType":"module"}