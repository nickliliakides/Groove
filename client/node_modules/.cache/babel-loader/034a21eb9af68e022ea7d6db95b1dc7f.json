{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/Product/productImg.jsx\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Lightbox from 'react-images';\n\nconst ProductImg = props => {\n  const _useState = useState({\n    lightboxIsOpen: false,\n    currentImage: 0,\n    images: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    let images = [];\n\n    if (props.detail.images.length > 0) {\n      props.detail.images.forEach(item => {\n        images.push({\n          src: \"\".concat(item.url)\n        });\n      });\n    }\n\n    setState(_objectSpread({}, state, {\n      images\n    }));\n  }, [props.detail]);\n\n  const renderItemImg = images => {\n    if (images.length > 0) {\n      return images[0].url;\n    } else {\n      return '/images/image_not_available.png';\n    }\n  }; // const toggleModal = () => { \n  //   setLightboxController({\n  //   ...lightboxController,\n  //   modalIsOpen: !lightboxController.modalIsOpen, \n  //   }); \n  //   }\n  // const handleLightBox = pos => {\n  //   if(state.lightboxImages.length > 0) {\n  //     setState({\n  //       ...state,\n  //       lightbox: true,\n  //       imagePos: pos\n  //     }\n  //   }\n  // }\n  // const handleCloseLightBox = () => {\n  //   setState({\n  //     ...state,\n  //     lightbox: false\n  //   })\n  // }\n  // const openLightbox = () => {\n  //   if(lightboxController.lightboxImages.length > 0){\n  //     setLightboxController({\n  //       ...lightboxController,\n  //       lightbox: true\n  //     })\n  //   }\n  // }\n\n\n  const showThumbs = () => lightboxController.lightboxImages.map((item, i) => i > 0 && React.createElement(\"div\", {\n    key: i,\n    className: \"thumb\" // onClick={() => openLightbox()}\n    ,\n    style: {\n      background: \"url(\".concat(item.src, \") no-repeat\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n\n  const detail = props.detail;\n  console.log(lightboxController.lightboxImages);\n  return React.createElement(\"div\", {\n    className: \"product_image_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main_pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background: \"url(\".concat(renderItemImg(detail.images), \") no-repeat\")\n    } // onClick={() => openLightbox()}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"main_thumbs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Lightbox, {\n    currentImage: state.currentImage,\n    images: state.images,\n    isOpen: state.lightboxIsOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })));\n};\n\nexport default ProductImg;","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/Product/productImg.jsx"],"names":["React","useState","useEffect","Fragment","Lightbox","ProductImg","props","lightboxIsOpen","currentImage","images","state","setState","detail","length","forEach","item","push","src","url","renderItemImg","showThumbs","lightboxController","lightboxImages","map","i","background","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,QAApC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,cAArB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA,oBAEAL,QAAQ,CAAC;AACjCM,IAAAA,cAAc,EAAE,KADiB;AAEjCC,IAAAA,YAAY,EAAE,CAFmB;AAGjCC,IAAAA,MAAM,EAAE;AAHyB,GAAD,CAFR;AAAA;AAAA,QAEnBC,KAFmB;AAAA,QAEZC,QAFY;;AAQ1BT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,MAAM,GAAG,EAAb;;AACA,QAAGH,KAAK,CAACM,MAAN,CAAaH,MAAb,CAAoBI,MAApB,GAA6B,CAAhC,EAAkC;AAEhCP,MAAAA,KAAK,CAACM,MAAN,CAAaH,MAAb,CAAoBK,OAApB,CAA4BC,IAAI,IAAI;AAClCN,QAAAA,MAAM,CAACO,IAAP,CAAY;AAACC,UAAAA,GAAG,YAAKF,IAAI,CAACG,GAAV;AAAJ,SAAZ;AACD,OAFD;AAGD;;AACDP,IAAAA,QAAQ,mBACHD,KADG;AAEND,MAAAA;AAFM,OAAR;AAID,GAZQ,EAYN,CAACH,KAAK,CAACM,MAAP,CAZM,CAAT;;AAcA,QAAMO,aAAa,GAAGV,MAAM,IAAI;AAC9B,QAAGA,MAAM,CAACI,MAAP,GAAgB,CAAnB,EAAqB;AACnB,aAAOJ,MAAM,CAAC,CAAD,CAAN,CAAUS,GAAjB;AACD,KAFD,MAEO;AACL,aAAO,iCAAP;AACD;AACF,GAND,CAtB0B,CA8B1B;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAME,UAAU,GAAG,MACjBC,kBAAkB,CAACC,cAAnB,CAAkCC,GAAlC,CAAsC,CAACR,IAAD,EAAMS,CAAN,KACpCA,CAAC,GAAG,CAAJ,IACA;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,SAAS,EAAC,OAFZ,CAGE;AAHF;AAIE,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,gBAASV,IAAI,CAACE,GAAd;AAAX,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;;AAhE0B,QA6EnBL,MA7EmB,GA6ETN,KA7ES,CA6EnBM,MA7EmB;AA8E1Bc,EAAAA,OAAO,CAACC,GAAR,CAAYN,kBAAkB,CAACC,cAA/B;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AAACG,MAAAA,UAAU,gBAASN,aAAa,CAACP,MAAM,CAACH,MAAR,CAAtB;AAAX,KADT,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AACE,IAAA,YAAY,EAAEC,KAAK,CAACF,YADtB;AAEE,IAAA,MAAM,EAAEE,KAAK,CAACD,MAFhB;AAGE,IAAA,MAAM,EAAEC,KAAK,CAACH,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CARF,CADF;AAkBD,CAlGD;;AAoGA,eAAeF,UAAf","sourcesContent":["import React,{ useState, useEffect, Fragment } from 'react'\nimport Lightbox from 'react-images';\n\nconst ProductImg = props => {\n\n  const [state, setState] = useState({ \n    lightboxIsOpen: false,\n    currentImage: 0,\n    images: []\n    });\n\n  useEffect(() => {\n    let images = [];\n    if(props.detail.images.length > 0){\n      \n      props.detail.images.forEach(item => {\n        images.push({src: `${item.url}`})\n      })\n    }\n    setState({\n      ...state,\n      images\n    })\n  }, [props.detail])\n\n  const renderItemImg = images => {\n    if(images.length > 0){\n      return images[0].url\n    } else {\n      return '/images/image_not_available.png'\n    }\n  }\n\n  // const toggleModal = () => { \n    \n  //   setLightboxController({\n  //   ...lightboxController,\n  //   modalIsOpen: !lightboxController.modalIsOpen, \n  //   }); \n  //   }\n\n  // const handleLightBox = pos => {\n  //   if(state.lightboxImages.length > 0) {\n  //     setState({\n  //       ...state,\n  //       lightbox: true,\n  //       imagePos: pos\n  //     }\n  //   }\n  // }\n\n  // const handleCloseLightBox = () => {\n  //   setState({\n  //     ...state,\n  //     lightbox: false\n  //   })\n  // }\n\n  // const openLightbox = () => {\n  //   if(lightboxController.lightboxImages.length > 0){\n  //     setLightboxController({\n  //       ...lightboxController,\n  //       lightbox: true\n  //     })\n  //   }\n  // }\n\n  const showThumbs = () => (\n    lightboxController.lightboxImages.map((item,i) => (\n      i > 0 && \n      <div\n        key={i}\n        className=\"thumb\"\n        // onClick={() => openLightbox()}\n        style={{background: `url(${item.src}) no-repeat`}}\n      >\n      </div>  \n    ))\n  )\n\n  const {detail} = props;\n  console.log(lightboxController.lightboxImages)\n\n  return (\n    <div className=\"product_image_container\">\n      <div className=\"main_pic\">\n        <div\n          style={{background: `url(${renderItemImg(detail.images)}) no-repeat`}}\n          // onClick={() => openLightbox()}\n        >\n        </div>\n      </div>\n      <div className=\"main_thumbs\">\n      <Lightbox\n        currentImage={state.currentImage}\n        images={state.images}\n        isOpen={state.lightboxIsOpen}\n      />\n      </div>\n    </div>\n  )\n}\n\nexport default ProductImg\n"]},"metadata":{},"sourceType":"module"}