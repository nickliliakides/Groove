{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/User/updateUserInfo.jsx\";\nimport React, { useState } from \"react\";\nimport FormField from \"../shared/formField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { updateField, generateData, isFormValid } from \"../../utils/formActions\";\nimport { connect } from \"react-redux\";\n\nconst UpdateUserInfo = props => {\n  const _useState = useState({\n    formError: false,\n    formSuccess: false,\n    formdata: {\n      name: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          name: \"name_input\",\n          type: \"text\",\n          placeholder: \"Enter your name\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\"\n      },\n      lastname: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          name: \"lastname_input\",\n          type: \"text\",\n          placeholder: \"Enter your lastname\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\"\n      },\n      email: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          name: \"email_input\",\n          type: \"email\",\n          placeholder: \"Enter your email\"\n        },\n        validation: {\n          required: true,\n          email: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\"\n      }\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleChange = el => {\n    const formdata = updateField(el, state.formdata, \"update_user\");\n    setState(_objectSpread({}, state, {\n      formError: false,\n      formdata\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let dataToSubmit = generateData(state.formdata, \"update_user\");\n    let formIsValid = isFormValid(state.formdata, \"update_user\");\n\n    if (formIsValid) {\n      console.log(dataToSubmit);\n    } else {\n      setState(_objectSpread({}, state, {\n        formError: true\n      }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Personal Information\"), React.createElement(\"div\", {\n    className: \"form_block_three\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"name\",\n    formdata: state.formdata.name,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"lastname\",\n    formdata: state.formdata.lastname,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"email\",\n    formdata: state.formdata.email,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, state.formError && React.createElement(\"div\", {\n    className: \"error_label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Something is wrong, please check your data.\"), React.createElement(\"button\", {\n    onClick: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Update Account\"))));\n};\n\nexport default UpdateUserInfo;","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/User/updateUserInfo.jsx"],"names":["React","useState","FormField","Dialog","updateField","generateData","isFormValid","connect","UpdateUserInfo","props","formError","formSuccess","formdata","name","element","value","config","type","placeholder","validation","required","valid","touched","validationMessage","lastname","email","state","setState","handleChange","el","handleSubmit","e","preventDefault","dataToSubmit","formIsValid","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormField from \"../shared/formField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {\n  updateField,\n  generateData,\n  isFormValid\n} from \"../../utils/formActions\";\nimport { connect } from \"react-redux\";\n\nconst UpdateUserInfo = props => {\n  const [state, setState] = useState({\n    formError: false,\n    formSuccess: false,\n    formdata: {\n      name: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          name: \"name_input\",\n          type: \"text\",\n          placeholder: \"Enter your name\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\"\n      },\n      lastname: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          name: \"lastname_input\",\n          type: \"text\",\n          placeholder: \"Enter your lastname\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\"\n      },\n      email: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          name: \"email_input\",\n          type: \"email\",\n          placeholder: \"Enter your email\"\n        },\n        validation: {\n          required: true,\n          email: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\"\n      }\n    }\n  });\n\n  const handleChange = el => {\n    const formdata = updateField(el, state.formdata, \"update_user\");\n    setState({\n      ...state,\n      formError: false,\n      formdata\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let dataToSubmit = generateData(state.formdata, \"update_user\");\n    let formIsValid = isFormValid(state.formdata, \"update_user\");\n\n    if (formIsValid) {\n      console.log(dataToSubmit);\n    } else {\n      setState({\n        ...state,\n        formError: true\n      });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={e => handleSubmit(e)}>\n        <h2>Personal Information</h2>\n        <div className=\"form_block_three\">\n          <div className=\"block\">\n            <FormField\n              id={\"name\"}\n              formdata={state.formdata.name}\n              onchange={el => handleChange(el)}\n            />\n          </div>\n          <div className=\"block\">\n            <FormField\n              id={\"lastname\"}\n              formdata={state.formdata.lastname}\n              onchange={el => handleChange(el)}\n            />\n          </div>\n          <div className=\"block\">\n            <FormField\n              id={\"email\"}\n              formdata={state.formdata.email}\n              onchange={el => handleChange(el)}\n            />\n          </div>\n        </div>\n        <div>\n          {state.formError && (\n            <div className=\"error_label\">\n              Something is wrong, please check your data.\n            </div>\n          )}\n          <button onClick={e => handleSubmit(e)}>Update Account</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateUserInfo;\n"]},"metadata":{},"sourceType":"module"}