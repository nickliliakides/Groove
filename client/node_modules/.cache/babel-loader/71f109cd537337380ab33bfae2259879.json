{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/User/Admin/updateSiteInfo.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport FormField from \"../../shared/formField\";\nimport { updateField, generateData, isFormValid, populateFields } from \"../../../utils/formActions\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\n\nconst UpdateSiteInfo = props => {\n  const _useState = useState({\n    formError: false,\n    formSuccess: false,\n    formdata: {\n      address: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          label: \"Address\",\n          name: \"address_input\",\n          type: \"text\",\n          placeholder: \"Enter address\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: true\n      },\n      hours: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          label: \"Working hours\",\n          name: \"hours_input\",\n          type: \"text\",\n          placeholder: \"Enter working hours\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: true\n      },\n      phone: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          label: \"Phone number\",\n          name: \"phone_input\",\n          type: \"text\",\n          placeholder: \"Enter phone number\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: true\n      },\n      email: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          label: \"email\",\n          name: \"email_input\",\n          type: \"email\",\n          placeholder: \"Enter email\"\n        },\n        validation: {\n          required: true,\n          email: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: true\n      }\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleChange = el => {\n    const formdata = updateField(el, state.formdata, \"site_info\");\n    setState(_objectSpread({}, state, {\n      formError: false,\n      formdata\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let dataToSubmit = generateData(state.formdata, \"site_info\");\n    let formIsValid = isFormValid(state.formdata, \"site_info\");\n\n    if (formIsValid) {// props.dispatch(updateProfile(dataToSubmit)).then((res) => {\n      //   if(res.payload.success){\n      //     setState({\n      //       ...state,\n      //       formSuccess: true\n      //     })\n      //     setTimeout(() => {\n      //       props.dispatch(clearUserData());\n      //       setState({\n      //         ...state,\n      //         formSuccess: false\n      //       });\n      //       props.history.push('/user/dashboard')\n      //     }, 1200)\n      //   }\n      // });\n    } else {\n      setState(_objectSpread({}, state, {\n        formError: true\n      }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form_block_three\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"address\",\n    formdata: state.formdata.address,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"hours\",\n    formdata: state.formdata.hours,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"phone\",\n    formdata: state.formdata.phone,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"email\",\n    formdata: state.formdata.email,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, state.formSuccess && React.createElement(\"div\", {\n    className: \"form_success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Updated successfully.\"), state.formError && React.createElement(\"div\", {\n    className: \"error_label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Something is wrong, please check your data.\"), React.createElement(\"button\", {\n    onClick: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Save Info\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    site: state.site\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(UpdateSiteInfo));","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/User/Admin/updateSiteInfo.jsx"],"names":["React","useState","useEffect","FormField","updateField","generateData","isFormValid","populateFields","connect","withRouter","UpdateSiteInfo","props","formError","formSuccess","formdata","address","element","value","config","label","name","type","placeholder","validation","required","valid","touched","validationMessage","showlabel","hours","phone","email","state","setState","handleChange","el","handleSubmit","e","preventDefault","dataToSubmit","formIsValid","mapStateToProps","site"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FormField from \"../../shared/formField\";\nimport {\n  updateField,\n  generateData,\n  isFormValid,\n  populateFields\n} from \"../../../utils/formActions\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\n\nconst UpdateSiteInfo = props => {\n  const [state, setState] = useState({\n    formError: false,\n    formSuccess: false,\n    formdata: {\n      address: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          label: \"Address\",\n          name: \"address_input\",\n          type: \"text\",\n          placeholder: \"Enter address\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: true\n      },\n      hours: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          label: \"Working hours\",\n          name: \"hours_input\",\n          type: \"text\",\n          placeholder: \"Enter working hours\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: true\n      },\n      phone: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          label: \"Phone number\",\n          name: \"phone_input\",\n          type: \"text\",\n          placeholder: \"Enter phone number\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: true\n      },\n      email: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          label: \"email\",\n          name: \"email_input\",\n          type: \"email\",\n          placeholder: \"Enter email\"\n        },\n        validation: {\n          required: true,\n          email: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\",\n        showlabel: true\n      }\n    }\n  });\n\n  const handleChange = el => {\n    const formdata = updateField(el, state.formdata, \"site_info\");\n    setState({\n      ...state,\n      formError: false,\n      formdata\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let dataToSubmit = generateData(state.formdata, \"site_info\");\n    let formIsValid = isFormValid(state.formdata, \"site_info\");\n\n    if (formIsValid) {\n      // props.dispatch(updateProfile(dataToSubmit)).then((res) => {\n      //   if(res.payload.success){\n      //     setState({\n      //       ...state,\n      //       formSuccess: true\n      //     })\n      //     setTimeout(() => {\n      //       props.dispatch(clearUserData());\n      //       setState({\n      //         ...state,\n      //         formSuccess: false\n      //       });\n      //       props.history.push('/user/dashboard')\n      //     }, 1200)\n      //   }\n      // });\n    } else {\n      setState({\n        ...state,\n        formError: true\n      });\n    }\n  };\n\n  return (\n    <div>\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"form_block_three\">\n        <div className=\"block\">\n          <FormField\n            id={\"address\"}\n            formdata={state.formdata.address}\n            onchange={el => handleChange(el)}\n          />\n        </div>\n        <div className=\"block\">\n          <FormField\n            id={\"hours\"}\n            formdata={state.formdata.hours}\n            onchange={el => handleChange(el)}\n          />\n        </div>\n        <div className=\"block\">\n          <FormField\n            id={\"phone\"}\n            formdata={state.formdata.phone}\n            onchange={el => handleChange(el)}\n          />\n        </div>\n        <div className=\"block\">\n          <FormField\n            id={\"email\"}\n            formdata={state.formdata.email}\n            onchange={el => handleChange(el)}\n          />\n        </div>\n      </div>\n      <div>\n        {state.formSuccess && \n          <div className=\"form_success\">\n            Updated successfully.\n          </div>\n        }\n        {state.formError && \n          <div className=\"error_label\">\n            Something is wrong, please check your data.\n          </div>\n        }\n        <button onClick={e => handleSubmit(e)}>Save Info</button>\n      </div>\n    </form>\n  </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    site: state.site\n  }\n}\n\nexport default connect(mapStateToProps)(withRouter(UpdateSiteInfo))\n"]},"metadata":{},"sourceType":"module"}