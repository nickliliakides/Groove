{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/User/cart.jsx\";\nimport React, { Component } from \"react\";\nimport UserLayout from \"../../hoc/user\";\nimport { connect } from \"react-redux\";\nimport { getBasketItems } from \"../../store/actions/userActions\";\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faFrown from \"@fortawesome/fontawesome-free-solid/faFrown\";\nimport faSmile from \"@fortawesome/fontawesome-free-solid/faSmile\";\nimport CartBlock from \"./cartBlock\";\n\nclass UserCart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      total: 0,\n      success: false,\n      amount: false\n    };\n\n    this.removeFromCart = id => {};\n\n    this.calculateTotal = data => {\n      let total = 0;\n      data.forEach(item => {\n        total += parseInt(item.price, 10) * item.quantity;\n      });\n      return total;\n    };\n  }\n\n  componentDidMount() {\n    let cartItems = [];\n    const user = this.props.user;\n    const cart = user.userData.cart;\n\n    if (cart && cart.length > 0) {\n      cart.forEach(item => {\n        cartItems.push(item.id);\n      });\n    }\n\n    this.props.dispatch(getBasketItems(cartItems, cart)).then(() => {\n      if (this.props.user.cartData.length > 0) {\n        this.calculateTotal(this.props.user.cartData);\n      }\n    });\n  }\n\n  render() {\n    const user = this.props.user;\n    return React.createElement(UserLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"My Basket\"), React.createElement(\"div\", {\n      className: \"user_cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(CartBlock, {\n      products: user,\n      type: \"cart\",\n      removeItem: id => this.removeFromCart(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(UserCart);","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/User/cart.jsx"],"names":["React","Component","UserLayout","connect","getBasketItems","FontAwesomeIcon","faFrown","faSmile","CartBlock","UserCart","state","loading","total","success","amount","removeFromCart","id","calculateTotal","data","forEach","item","parseInt","price","quantity","componentDidMount","cartItems","user","props","cart","userData","length","push","dispatch","then","cartData","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BS,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,OAAO,EAAE,KAHH;AAINC,MAAAA,MAAM,EAAE;AAJF,KADuB;;AAAA,SA0B/BC,cA1B+B,GA0BdC,EAAE,IAAI,CAEtB,CA5B8B;;AAAA,SA8B/BC,cA9B+B,GA8BdC,IAAI,IAAI;AAEnB,UAAIN,KAAK,GAAG,CAAZ;AAEAM,MAAAA,IAAI,CAACC,OAAL,CAAaC,IAAI,IAAI;AACnBR,QAAAA,KAAK,IAAIS,QAAQ,CAACD,IAAI,CAACE,KAAN,EAAa,EAAb,CAAR,GAA2BF,IAAI,CAACG,QAAzC;AACD,OAFD;AAGA,aAAOX,KAAP;AAEL,KAvC8B;AAAA;;AAQ/BY,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,SAAS,GAAG,EAAhB;AADkB,UAEVC,IAFU,GAED,KAAKC,KAFJ,CAEVD,IAFU;AAAA,UAGVE,IAHU,GAGDF,IAAI,CAACG,QAHJ,CAGVD,IAHU;;AAKlB,QAAGA,IAAI,IAAIA,IAAI,CAACE,MAAL,GAAc,CAAzB,EAA2B;AACzBF,MAAAA,IAAI,CAACT,OAAL,CAAaC,IAAI,IAAI;AACnBK,QAAAA,SAAS,CAACM,IAAV,CAAeX,IAAI,CAACJ,EAApB;AACD,OAFD;AAGD;;AACD,SAAKW,KAAL,CAAWK,QAAX,CAAoB5B,cAAc,CAACqB,SAAD,EAAYG,IAAZ,CAAlC,EAAqDK,IAArD,CAA0D,MAAM;AAC9D,UAAG,KAAKN,KAAL,CAAWD,IAAX,CAAgBQ,QAAhB,CAAyBJ,MAAzB,GAAkC,CAArC,EAAuC;AACrC,aAAKb,cAAL,CAAoB,KAAKU,KAAL,CAAWD,IAAX,CAAgBQ,QAApC;AACD;AAEF,KALD;AAMD;;AAiBDC,EAAAA,MAAM,GAAG;AAAA,UACCT,IADD,GACU,KAAKC,KADf,CACCD,IADD;AAEP,WACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAEA,IADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,UAAU,EAAEV,EAAE,IAAI,KAAKD,cAAL,CAAoBC,EAApB,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,CADF;AAcD;;AAzD8B;;AA2DhC;;AAED,MAAMoB,eAAe,GAAG1B,KAAK,IAAI;AAC/B,SAAO;AACLgB,IAAAA,IAAI,EAAEhB,KAAK,CAACgB;AADP,GAAP;AAGD,CAJD;;AAMA,eAAevB,OAAO,CAACiC,eAAD,CAAP,CAAyB3B,QAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport UserLayout from \"../../hoc/user\";\nimport { connect } from \"react-redux\";\nimport { getBasketItems } from \"../../store/actions/userActions\";\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faFrown from \"@fortawesome/fontawesome-free-solid/faFrown\";\nimport faSmile from \"@fortawesome/fontawesome-free-solid/faSmile\";\nimport CartBlock from \"./cartBlock\";\n\nclass UserCart extends Component {\n  state = {\n    loading: true,\n    total: 0,\n    success: false,\n    amount: false\n  };\n\n  componentDidMount() {\n    let cartItems = [];\n    const { user } = this.props;\n    const { cart } = user.userData\n    \n    if(cart && cart.length > 0){\n      cart.forEach(item => {\n        cartItems.push(item.id);\n      })\n    }\n    this.props.dispatch(getBasketItems(cartItems, cart)).then(() => {\n      if(this.props.user.cartData.length > 0){\n        this.calculateTotal(this.props.user.cartData)\n      }\n      \n    })\n  }\n\n  removeFromCart = id => {\n\n  }\n\n  calculateTotal = data => {\n    \n        let total = 0;\n\n        data.forEach(item => {\n          total += parseInt(item.price, 10) * item.quantity;\n        })\n        return total;\n  \n  }\n\n  render() {\n    const { user } = this.props;\n    return (\n      <UserLayout>\n        <div>\n          <h1>My Basket</h1>\n          <div className=\"user_cart\">\n            <CartBlock\n              products={user}\n              type=\"cart\"\n              removeItem={id => this.removeFromCart(id)}\n            />\n          </div>\n        </div>\n      </UserLayout>\n    );\n  }\n \n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(UserCart);\n"]},"metadata":{},"sourceType":"module"}