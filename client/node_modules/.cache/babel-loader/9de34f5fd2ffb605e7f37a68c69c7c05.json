{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/User/updateUserInfo.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport FormField from \"../shared/formField\";\nimport { updateField, generateData, isFormValid, populateFields } from \"../../utils/formActions\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { updateProfile, clearUserData } from \"../../store/actions/userActions\";\n\nconst UpdateUserInfo = props => {\n  const _useState = useState({\n    formError: false,\n    formSuccess: false,\n    formdata: {\n      name: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          name: \"name_input\",\n          type: \"text\",\n          placeholder: \"Enter your name\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\"\n      },\n      lastname: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          name: \"lastname_input\",\n          type: \"text\",\n          placeholder: \"Enter your lastname\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\"\n      },\n      email: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          name: \"email_input\",\n          type: \"email\",\n          placeholder: \"Enter your email\"\n        },\n        validation: {\n          required: true,\n          email: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\"\n      }\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    const newFormData = populateFields(state.formdata, props.user.userData);\n    setState(_objectSpread({}, state, {\n      formdata: newFormData\n    }));\n  }, []);\n\n  const handleChange = el => {\n    const formdata = updateField(el, state.formdata, \"update_user\");\n    setState(_objectSpread({}, state, {\n      formError: false,\n      formdata\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let dataToSubmit = generateData(state.formdata, \"update_user\");\n    let formIsValid = isFormValid(state.formdata, \"update_user\");\n\n    if (formIsValid) {\n      props.dispatch(updateProfile(dataToSubmit)).then(res => {\n        if (res.payload.success) {\n          setState(_objectSpread({}, state, {\n            formSuccess: true\n          }));\n          setTimeout(() => {\n            props.dispatch(clearUserData());\n            setState(_objectSpread({}, state, {\n              formSuccess: false\n            }));\n          }, 1500);\n          props.history.push;\n        }\n      });\n    } else {\n      setState(_objectSpread({}, state, {\n        formError: true\n      }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Personal Information\"), React.createElement(\"div\", {\n    className: \"form_block_three\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"name\",\n    formdata: state.formdata.name,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"lastname\",\n    formdata: state.formdata.lastname,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"email\",\n    formdata: state.formdata.email,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, state.formSuccess && React.createElement(\"div\", {\n    className: \"form_success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Updated successfully.\"), state.formError && React.createElement(\"div\", {\n    className: \"error_label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Something is wrong, please check your data.\"), React.createElement(\"button\", {\n    onClick: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Update Account\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(UpdateUserInfo);","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/User/updateUserInfo.jsx"],"names":["React","useState","useEffect","FormField","updateField","generateData","isFormValid","populateFields","connect","withRouter","updateProfile","clearUserData","UpdateUserInfo","props","formError","formSuccess","formdata","name","element","value","config","type","placeholder","validation","required","valid","touched","validationMessage","lastname","email","state","setState","newFormData","user","userData","handleChange","el","handleSubmit","e","preventDefault","dataToSubmit","formIsValid","dispatch","then","res","payload","success","setTimeout","history","push","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FormField from \"../shared/formField\";\nimport {\n  updateField,\n  generateData,\n  isFormValid,\n  populateFields\n} from \"../../utils/formActions\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { updateProfile, clearUserData } from \"../../store/actions/userActions\";\n\nconst UpdateUserInfo = props => {\n  const [state, setState] = useState({\n    formError: false,\n    formSuccess: false,\n    formdata: {\n      name: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          name: \"name_input\",\n          type: \"text\",\n          placeholder: \"Enter your name\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\"\n      },\n      lastname: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          name: \"lastname_input\",\n          type: \"text\",\n          placeholder: \"Enter your lastname\"\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\"\n      },\n      email: {\n        element: \"input\",\n        value: \"\",\n        config: {\n          name: \"email_input\",\n          type: \"email\",\n          placeholder: \"Enter your email\"\n        },\n        validation: {\n          required: true,\n          email: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: \"\"\n      }\n    }\n  });\n\n  useEffect(() => {\n    const newFormData = populateFields(state.formdata, props.user.userData);\n\n    setState({\n      ...state,\n      formdata: newFormData\n    })\n  },[])\n\n  const handleChange = el => {\n    const formdata = updateField(el, state.formdata, \"update_user\");\n    setState({\n      ...state,\n      formError: false,\n      formdata\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let dataToSubmit = generateData(state.formdata, \"update_user\");\n    let formIsValid = isFormValid(state.formdata, \"update_user\");\n\n    if (formIsValid) {\n      props.dispatch(updateProfile(dataToSubmit)).then((res) => {\n        if(res.payload.success){\n          setState({\n            ...state,\n            formSuccess: true\n          })\n          setTimeout(() => {\n            props.dispatch(clearUserData());\n            setState({\n              ...state,\n              formSuccess: false\n            })\n          }, 1500)\n          props.history.push\n        }\n      });\n    } else {\n      setState({\n        ...state,\n        formError: true\n      });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={e => handleSubmit(e)}>\n        <h2>Personal Information</h2>\n        <div className=\"form_block_three\">\n          <div className=\"block\">\n            <FormField\n              id={\"name\"}\n              formdata={state.formdata.name}\n              onchange={el => handleChange(el)}\n            />\n          </div>\n          <div className=\"block\">\n            <FormField\n              id={\"lastname\"}\n              formdata={state.formdata.lastname}\n              onchange={el => handleChange(el)}\n            />\n          </div>\n          <div className=\"block\">\n            <FormField\n              id={\"email\"}\n              formdata={state.formdata.email}\n              onchange={el => handleChange(el)}\n            />\n          </div>\n        </div>\n        <div>\n          {state.formSuccess && \n            <div className=\"form_success\">\n              Updated successfully.\n            </div>\n          }\n          {state.formError && \n            <div className=\"error_label\">\n              Something is wrong, please check your data.\n            </div>\n          }\n          <button onClick={e => handleSubmit(e)}>Update Account</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps)(UpdateUserInfo);\n"]},"metadata":{},"sourceType":"module"}