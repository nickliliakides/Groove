{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/shared/paypal.jsx\";\nimport React from \"react\";\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\n\nconst Paypal = props => {\n  const onSuccess = payment => {\n    // Congratulation, it came here means everything's fine!\n    console.log(\"The payment was succeeded!\", JSON.stringify(payment)); // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n  };\n\n  const onCancel = data => {\n    // User pressed \"cancel\" or close Paypal's popup!\n    console.log(\"The payment was cancelled!\", JSON.stringify(data)); // {\"paymentToken\":\"EC-90E31189343625040\",\"paymentID\":\"PAYID-LVZ5HFA8DK16787CW837562M\",\"intent\":\"sale\",\"billingID\":\"EC-90E31189343625040\",\"cancelUrl\":\"https://www.paypal.com/checkoutnow/error?token=EC-90E31189343625040\"}\n  };\n\n  const onError = err => {\n    // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n    console.log(\"Error!\", JSON.stringify(err)); // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n    // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n  };\n\n  let env = \"sandbox\";\n  let currency = \"GBP\";\n  let total = props.toPay;\n  const client = {\n    sandbox: 'AXfarSSL70-Ycfgrp_Kcv9lhil7ZWAp5uwDNKdJYo1Md-fWCTVeZvtKQbpWUhatGKUmmwmzT0wAywVde',\n    production: ''\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(PaypalExpressBtn, {\n    env: env,\n    client: client,\n    currency: currency,\n    total: total,\n    onError: onError,\n    onSuccess: onSuccess,\n    onCancel: onCancel,\n    style: {\n      size: 'large',\n      // color: 'blue',\n      label: 'pay',\n      shape: 'rect'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nexport default Paypal;","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/shared/paypal.jsx"],"names":["React","PaypalExpressBtn","Paypal","props","onSuccess","payment","console","log","JSON","stringify","onCancel","data","onError","err","env","currency","total","toPay","client","sandbox","production","size","label","shape"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAMC,SAAS,GAAGC,OAAO,IAAI;AAC3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAA1C,EAF2B,CAG3B;AACD,GAJD;;AAMA,QAAMK,QAAQ,GAAGC,IAAI,IAAI;AACvB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CC,IAAI,CAACC,SAAL,CAAeE,IAAf,CAA1C,EAFuB,CAGvB;AACD,GAJD;;AAMA,QAAMC,OAAO,GAAGC,GAAG,IAAI;AACrB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,IAAI,CAACC,SAAL,CAAeI,GAAf,CAAtB,EAFqB,CAGrB;AACA;AACD,GALD;;AAOA,MAAIC,GAAG,GAAG,SAAV;AACA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,KAAK,GAAGb,KAAK,CAACc,KAAlB;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAC,kFADK;AAEbC,IAAAA,UAAU,EAAC;AAFE,GAAf;AAKA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,oBAAC,gBAAD;AACE,IAAA,GAAG,EAAEN,GADP;AAEE,IAAA,MAAM,EAAEI,MAFV;AAGE,IAAA,QAAQ,EAAEH,QAHZ;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,OAAO,EAAEJ,OALX;AAME,IAAA,SAAS,EAAER,SANb;AAOE,IAAA,QAAQ,EAAEM,QAPZ;AAQE,IAAA,KAAK,EAAE;AACLW,MAAAA,IAAI,EAAE,OADD;AAEL;AACAC,MAAAA,KAAK,EAAE,KAHF;AAILC,MAAAA,KAAK,EAAE;AAJF,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CAAP;AAiBD,CA9CD;;AAgDA,eAAerB,MAAf","sourcesContent":["import React from \"react\";\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\n\nconst Paypal = props => {\n  const onSuccess = payment => {\n    // Congratulation, it came here means everything's fine!\n    console.log(\"The payment was succeeded!\", JSON.stringify(payment));\n    // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n  };\n\n  const onCancel = data => {\n    // User pressed \"cancel\" or close Paypal's popup!\n    console.log(\"The payment was cancelled!\", JSON.stringify(data));\n    // {\"paymentToken\":\"EC-90E31189343625040\",\"paymentID\":\"PAYID-LVZ5HFA8DK16787CW837562M\",\"intent\":\"sale\",\"billingID\":\"EC-90E31189343625040\",\"cancelUrl\":\"https://www.paypal.com/checkoutnow/error?token=EC-90E31189343625040\"}\n  };\n\n  const onError = err => {\n    // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n    console.log(\"Error!\", JSON.stringify(err));\n    // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n    // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n  };\n\n  let env = \"sandbox\";\n  let currency = \"GBP\";\n  let total = props.toPay;\n\n  const client = {\n    sandbox:'AXfarSSL70-Ycfgrp_Kcv9lhil7ZWAp5uwDNKdJYo1Md-fWCTVeZvtKQbpWUhatGKUmmwmzT0wAywVde',\n    production:''\n  }\n\n  return <div>\n    <PaypalExpressBtn\n      env={env}\n      client={client}\n      currency={currency}\n      total={total}\n      onError={onError}\n      onSuccess={onSuccess}\n      onCancel={onCancel}\n      style={{\n        size: 'large',\n        // color: 'blue',\n        label: 'pay',\n        shape: 'rect'\n      }}\n    />\n  </div>;\n};\n\nexport default Paypal;\n"]},"metadata":{},"sourceType":"module"}