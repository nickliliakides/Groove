{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/shared/lightbox.jsx\";\nimport React, { useState, useEffect } from 'react'; // import Lightbox from 'react-images'\n\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nconst ImageLightbox = props => {\n  const _useState = useState({\n    modalIsOpen: false,\n    images: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    const images = [];\n    props.images.forEach(img => {\n      images.push({\n        src: \"\".concat(img)\n      });\n    });\n    setState(_objectSpread({}, state, {\n      images\n    }));\n  }, [props.images]);\n\n  const toggleModal = () => {\n    setState(_objectSpread({}, state, {\n      modalIsOpen: !state.modalIsOpen\n    }));\n  };\n\n  console.log(state);\n  return React.createElement(ModalGateway, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, state.modalIsOpen && React.createElement(Modal, {\n    onClose: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Carousel, {\n    views: state.images,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))) // <Lightbox \n  //   currentImage={this.state.currentImage}\n  //   images={this.state.images}\n  //   isOpen={this.state.lightboxIsOpen}\n  //   onClickPrev={() => this.gotoPrevious()}\n  //   onClickNext={() => this.gotoNext()}\n  //   onClose={() => this.closeLightbox()}\n  // />\n  ;\n};\n\nexport default ImageLightbox;","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/shared/lightbox.jsx"],"names":["React","useState","useEffect","Carousel","Modal","ModalGateway","ImageLightbox","props","modalIsOpen","images","state","setState","forEach","img","push","src","toggleModal","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C,C,CACA;;AACA,OAAOC,QAAP,IAAmBC,KAAnB,EAA0BC,YAA1B,QAA8C,cAA9C;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA,oBAEHN,QAAQ,CAAC;AACjCO,IAAAA,WAAW,EAAE,KADoB;AAEjCC,IAAAA,MAAM,EAAE;AAFyB,GAAD,CAFL;AAAA;AAAA,QAEtBC,KAFsB;AAAA,QAEfC,QAFe;;AAO7BT,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMO,MAAM,GAAG,EAAf;AACAF,IAAAA,KAAK,CAACE,MAAN,CAAaG,OAAb,CAAqBC,GAAG,IAAI;AAC1BJ,MAAAA,MAAM,CAACK,IAAP,CAAY;AAACC,QAAAA,GAAG,YAAKF,GAAL;AAAJ,OAAZ;AACD,KAFD;AAGAF,IAAAA,QAAQ,mBAAKD,KAAL;AAAYD,MAAAA;AAAZ,OAAR;AAEH,GARQ,EAQN,CAACF,KAAK,CAACE,MAAP,CARM,CAAT;;AAWA,QAAMO,WAAW,GAAG,MAAM;AACxBL,IAAAA,QAAQ,mBAAMD,KAAN;AAAaF,MAAAA,WAAW,EAAE,CAACE,KAAK,CAACF;AAAjC,OAAR;AACD,GAFD;;AAIAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEE,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACF,WAAN,IACC,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEQ,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAK,CAACD,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF,CAQE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfF;AAiBD,CAzCH;;AA2CA,eAAeH,aAAf","sourcesContent":["import React,{ useState, useEffect } from 'react'\n// import Lightbox from 'react-images'\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nconst ImageLightbox = props => {\n\n  const [state, setState] = useState({\n    modalIsOpen: false,\n    images: []\n  })\n\n  useEffect(() => {\n\n      const images = [];\n      props.images.forEach(img => {\n        images.push({src: `${img}`})\n      });\n      setState({...state, images})\n    \n  }, [props.images])\n  \n\n  const toggleModal = () => {\n    setState({ ...state, modalIsOpen: !state.modalIsOpen });\n  };\n\n  console.log(state)\n\n    return (\n      <ModalGateway>\n        {state.modalIsOpen && (\n          <Modal onClose={toggleModal}>\n            <Carousel views={state.images} />\n          </Modal>\n        )}\n      </ModalGateway>\n      // <Lightbox \n      //   currentImage={this.state.currentImage}\n      //   images={this.state.images}\n      //   isOpen={this.state.lightboxIsOpen}\n      //   onClickPrev={() => this.gotoPrevious()}\n      //   onClickNext={() => this.gotoNext()}\n      //   onClose={() => this.closeLightbox()}\n      // />\n    )\n  }\n\nexport default ImageLightbox\n"]},"metadata":{},"sourceType":"module"}