{"ast":null,"code":"import _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/shared/lightbox.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport FsLightbox from 'fslightbox-react';\n\nconst ImageLightbox = props => {\n  // const [state, setState] = useState({\n  //   modalIsOpen: true,\n  //   images: []\n  // })\n  const _useState = useState({\n    toggler: false,\n    slide: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        lightboxController = _useState2[0],\n        setLightboxController = _useState2[1];\n\n  const openLightboxOnSlide = pos => {\n    setLightboxController({\n      toggler: !lightboxController.toggler,\n      slide: pos\n    });\n  }; // useEffect(() => {\n  //     const images = [];\n  //     props.images.forEach(img => {\n  //       images.push({src: `${img}`})\n  //     });\n  //     setState({...state, images})\n  // }, [props.images])\n  // const toggleModal = () => {\n  //   setState({ ...state, modalIsOpen: !state.modalIsOpen });\n  // };\n  // console.log(state)\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.images.map((img, i) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    onClick: () => openLightboxOnSlide(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })))), React.createElement(FsLightbox, {\n    toggler: lightboxController.toggler,\n    slide: lightboxController.slide,\n    sources: props.images,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })) // <ModalGateway>\n  //   {state.modalIsOpen && (\n  //     <Modal onClose={toggleModal}>\n  //       <Carousel views={state.images} />\n  //     </Modal>\n  //   )}\n  // </ModalGateway>\n  // <Lightbox \n  //   currentImage={this.state.currentImage}\n  //   images={this.state.images}\n  //   isOpen={this.state.lightboxIsOpen}\n  //   onClickPrev={() => this.gotoPrevious()}\n  //   onClickNext={() => this.gotoNext()}\n  //   onClose={() => this.closeLightbox()}\n  // />\n  ;\n};\n\nexport default ImageLightbox;","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/shared/lightbox.jsx"],"names":["React","useState","useEffect","FsLightbox","ImageLightbox","props","toggler","slide","lightboxController","setLightboxController","openLightboxOnSlide","pos","images","map","img","i"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAE7B;AACA;AACA;AACA;AAL6B,oBAMuBJ,QAAQ,CAAC;AAC3DK,IAAAA,OAAO,EAAE,KADkD;AAE3DC,IAAAA,KAAK,EAAE;AAFoD,GAAD,CAN/B;AAAA;AAAA,QAMtBC,kBANsB;AAAA,QAMFC,qBANE;;AAW3B,QAAMC,mBAAmB,GAAGC,GAAG,IAAI;AACjCF,IAAAA,qBAAqB,CAAC;AACtBH,MAAAA,OAAO,EAAE,CAACE,kBAAkB,CAACF,OADP;AAEtBC,MAAAA,KAAK,EAAEI;AAFe,KAAD,CAArB;AAIC,GALH,CAX2B,CAkB7B;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;;;AAEE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIN,KAAK,CAACO,MAAN,CAAaC,GAAb,CAAiB,CAACC,GAAD,EAAKC,CAAL,KACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,OAAO,EAAG,MAAML,mBAAmB,CAACK,CAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,CADF,CAFJ,EAUA,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEN,kBAAkB,CAACF,OAD9B;AAEE,IAAA,KAAK,EAAEE,kBAAkB,CAACD,KAF5B;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACO,MAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,CADF,CAkBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCF;AAkCD,CArEH;;AAuEA,eAAeR,aAAf","sourcesContent":["import React,{ useState, useEffect } from 'react'\nimport FsLightbox from 'fslightbox-react';\n\nconst ImageLightbox = props => {\n\n  // const [state, setState] = useState({\n  //   modalIsOpen: true,\n  //   images: []\n  // })\n  const [lightboxController, setLightboxController] = useState({ \n    toggler: false, \n    slide: 0,\n    });\n\n    const openLightboxOnSlide = pos => { \n      setLightboxController({ \n      toggler: !lightboxController.toggler, \n      slide: pos, \n      }); \n      }\n\n  // useEffect(() => {\n\n  //     const images = [];\n  //     props.images.forEach(img => {\n  //       images.push({src: `${img}`})\n  //     });\n  //     setState({...state, images})\n    \n  // }, [props.images])\n  \n\n  // const toggleModal = () => {\n  //   setState({ ...state, modalIsOpen: !state.modalIsOpen });\n  // };\n\n  // console.log(state)\n\n    return (\n      <div>\n       {\n          props.images.map((img,i) => (\n            <div >\n            <a onClick={ () => openLightboxOnSlide(i) }> \n              <img src={img}/> \n            </a>\n            </div>\n          ))\n       }\n      <FsLightbox \n        toggler={lightboxController.toggler} \n        slide={lightboxController.slide} \n        sources={props.images}\n      />\n      </div>\n      \n      // <ModalGateway>\n      //   {state.modalIsOpen && (\n      //     <Modal onClose={toggleModal}>\n      //       <Carousel views={state.images} />\n      //     </Modal>\n      //   )}\n      // </ModalGateway>\n      // <Lightbox \n      //   currentImage={this.state.currentImage}\n      //   images={this.state.images}\n      //   isOpen={this.state.lightboxIsOpen}\n      //   onClickPrev={() => this.gotoPrevious()}\n      //   onClickNext={() => this.gotoNext()}\n      //   onClose={() => this.closeLightbox()}\n      // />\n    )\n  }\n\nexport default ImageLightbox\n"]},"metadata":{},"sourceType":"module"}