{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/Product/productImg.jsx\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nconst ProductImg = props => {\n  const _useState = useState({\n    modalIsOpen: false,\n    lightboxImages: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        lightboxController = _useState2[0],\n        setLightboxController = _useState2[1];\n\n  useEffect(() => {\n    let lightboxImages = [];\n\n    if (props.detail.images.length > 0) {\n      props.detail.images.forEach(item => {\n        lightboxImages.push(item.url);\n      });\n    }\n\n    setLightboxController(_objectSpread({}, lightboxController, {\n      lightboxImages\n    }));\n  }, [props.detail]);\n\n  const renderItemImg = images => {\n    if (images.length > 0) {\n      return images[0].url;\n    } else {\n      return '/images/image_not_available.png';\n    }\n  };\n\n  const toggleModal = () => {\n    setLightboxController(_objectSpread({}, lightboxController, {\n      modalIsOpen: !lightboxController.modalIsOpen\n    }));\n  }; // const handleLightBox = pos => {\n  //   if(state.lightboxImages.length > 0) {\n  //     setState({\n  //       ...state,\n  //       lightbox: true,\n  //       imagePos: pos\n  //     }\n  //   }\n  // }\n  // const handleCloseLightBox = () => {\n  //   setState({\n  //     ...state,\n  //     lightbox: false\n  //   })\n  // }\n\n\n  const showThumbs = () => React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, lightboxController.lightboxImages.map((item, i) => i > 0 && React.createElement(\"div\", {\n    key: i,\n    className: \"thumb\",\n    onClick: () => openLightboxOnSlide(i + 1),\n    style: {\n      background: \"url(\".concat(item, \") no-repeat\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(FsLightbox, {\n    toggler: lightboxController.toggler,\n    slide: lightboxController.slide,\n    sources: lightboxController.lightboxImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n\n  const detail = props.detail;\n  console.log(lightboxController.lightboxImages);\n  return React.createElement(\"div\", {\n    className: \"product_image_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main_pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background: \"url(\".concat(renderItemImg(detail.images), \") no-repeat\")\n    },\n    onClick: () => openLightboxOnSlide(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"main_thumbs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, showThumbs()));\n};\n\nexport default ProductImg;","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/Product/productImg.jsx"],"names":["React","useState","useEffect","Fragment","Carousel","Modal","ModalGateway","ProductImg","props","modalIsOpen","lightboxImages","lightboxController","setLightboxController","detail","images","length","forEach","item","push","url","renderItemImg","toggleModal","showThumbs","map","i","openLightboxOnSlide","background","toggler","slide","console","log"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect, Fragment } from 'react'\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nconst ProductImg = props => {\n\n  const [lightboxController, setLightboxController] = useState({ \n    modalIsOpen: false, \n    lightboxImages: []\n    });\n\n  useEffect(() => {\n    let lightboxImages = [];\n    if(props.detail.images.length > 0){\n      \n      props.detail.images.forEach(item => {\n        lightboxImages.push(item.url)\n      })\n    }\n    setLightboxController({\n      ...lightboxController,\n      lightboxImages\n    })\n  }, [props.detail])\n\n  const renderItemImg = images => {\n    if(images.length > 0){\n      return images[0].url\n    } else {\n      return '/images/image_not_available.png'\n    }\n  }\n\n  const toggleModal = () => { \n    \n    setLightboxController({\n    ...lightboxController,\n    modalIsOpen: !lightboxController.modalIsOpen, \n    }); \n    }\n\n  // const handleLightBox = pos => {\n  //   if(state.lightboxImages.length > 0) {\n  //     setState({\n  //       ...state,\n  //       lightbox: true,\n  //       imagePos: pos\n  //     }\n  //   }\n  // }\n\n  // const handleCloseLightBox = () => {\n  //   setState({\n  //     ...state,\n  //     lightbox: false\n  //   })\n  // }\n\n  const showThumbs = () => (\n    <Fragment>{\n      lightboxController.lightboxImages.map((item,i) => (\n        i > 0 && \n        <div\n          key={i}\n          className=\"thumb\"\n          onClick={() => openLightboxOnSlide(i+1)}\n          style={{background: `url(${item}) no-repeat`}}\n        >\n        </div>  \n      ))\n    }\n    <FsLightbox \n    toggler={lightboxController.toggler} \n    slide={lightboxController.slide} \n    sources={lightboxController.lightboxImages} \n  />\n  </Fragment>\n  )\n\n  const {detail} = props;\n  console.log(lightboxController.lightboxImages)\n\n  return (\n    <div className=\"product_image_container\">\n      <div className=\"main_pic\">\n        <div\n          style={{background: `url(${renderItemImg(detail.images)}) no-repeat`}}\n          onClick={() => openLightboxOnSlide(1)}\n        >\n        </div>\n      </div>\n      <div className=\"main_thumbs\">\n        {showThumbs()}\n      </div>\n    </div>\n  )\n}\n\nexport default ProductImg\n"]},"metadata":{},"sourceType":"module"}