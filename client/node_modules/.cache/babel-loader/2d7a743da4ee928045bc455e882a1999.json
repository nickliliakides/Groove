{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/User/Admin/addProduct.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport UserLayout from '../../../hoc/user';\nimport FormField from '../../shared/formField';\nimport FileUpload from '../../shared/fileUpload';\nimport { updateField, generateData, resetFields, populateOptionFields, isFormValid } from '../../../utils/formActions';\nimport { connect } from 'react-redux';\nimport { getBrands, getWoods, addProduct, clearProduct } from '../../../store/actions/productActions';\n\nconst AddProduct = props => {\n  const _useState = useState({\n    formError: false,\n    formSuccess: false,\n    formdata: {\n      name: {\n        element: 'input',\n        value: '',\n        config: {\n          label: 'Product name',\n          name: 'name_input',\n          type: 'text',\n          placeholder: 'Enter name'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      description: {\n        element: 'textarea',\n        value: '',\n        config: {\n          label: 'Product description',\n          name: 'description_input',\n          type: 'text',\n          placeholder: 'Enter description'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      price: {\n        element: 'input',\n        value: '',\n        config: {\n          label: 'Product price',\n          name: 'price_input',\n          type: 'number',\n          placeholder: 'Enter price'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      brand: {\n        element: 'select',\n        value: '',\n        config: {\n          label: 'Product brand',\n          name: 'brand_input',\n          options: []\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      shipping: {\n        element: 'select',\n        value: '',\n        config: {\n          label: 'Shipping',\n          name: 'shipping_input',\n          options: [{\n            key: true,\n            value: 'Yes'\n          }, {\n            key: false,\n            value: 'No'\n          }]\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      available: {\n        element: 'select',\n        value: '',\n        config: {\n          label: 'Available in stock',\n          name: 'available_input',\n          options: [{\n            key: true,\n            value: 'Yes'\n          }, {\n            key: false,\n            value: 'No'\n          }]\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      wood: {\n        element: 'select',\n        value: '',\n        config: {\n          label: 'Wood material',\n          name: 'wood_input',\n          options: []\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      strings: {\n        element: 'select',\n        value: '',\n        config: {\n          label: 'Strings number',\n          name: 'strings_input',\n          options: [{\n            key: 4,\n            value: 4\n          }, {\n            key: 5,\n            value: 5\n          }, {\n            key: 6,\n            value: 6\n          }, {\n            key: 8,\n            value: 8\n          }]\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      publish: {\n        element: 'select',\n        value: '',\n        config: {\n          label: 'Published',\n          name: 'publish_input',\n          options: [{\n            key: true,\n            value: 'Public'\n          }, {\n            key: false,\n            value: 'Hidden'\n          }]\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      images: {\n        value: [],\n        validation: {\n          required: false\n        },\n        valid: true,\n        touched: false,\n        validationMessage: '',\n        showLabel: false\n      }\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    props.dispatch(getBrands());\n    props.dispatch(getWoods());\n  }, []);\n  const formdata = state.formdata;\n  populateOptionFields(formdata, props.product.brands, 'brand');\n  populateOptionFields(formdata, props.product.woods, 'wood');\n\n  const handleChange = el => {\n    const formdata = updateField(el, state.formdata, 'products');\n    setState(_objectSpread({}, state, {\n      formError: false,\n      formdata\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let dataToSubmit = generateData(state.formdata, 'products');\n    let formIsValid = isFormValid(state.formdata, 'products');\n\n    if (formIsValid) {\n      try {\n        props.dispatch(addProduct(dataToSubmit));\n      } catch (error) {\n        setState(_objectSpread({}, state, {\n          formError: true\n        }));\n        return;\n      }\n\n      handleResetFields();\n    } else {\n      setState(_objectSpread({}, state, {\n        formError: true\n      }));\n    }\n  };\n\n  const handleResetFields = () => {\n    const newFormData = resetFields(state.formdata, 'products');\n    setState(_objectSpread({}, state, {\n      formdata: newFormData,\n      formSuccess: true\n    }));\n    setTimeout(() => {\n      setState(_objectSpread({}, state, {\n        formSuccess: false\n      }));\n      props.dispatch(clearProduct());\n    }, 3000);\n  };\n\n  const imagesHandler = images => {\n    const newFormData = _objectSpread({}, state.formdata);\n\n    newFormData['images'].value = images;\n    newFormData['images'].valid = true;\n    setState(_objectSpread({}, state, {\n      formdata: newFormData\n    }));\n  };\n\n  return React.createElement(UserLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"Add product\"), React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(FileUpload, {\n    imgHandler: images => imagesHandler(images),\n    reset: state.formSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }), React.createElement(FormField, {\n    id: 'name',\n    formdata: state.formdata.name,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), React.createElement(FormField, {\n    id: 'description',\n    formdata: state.formdata.description,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }), React.createElement(FormField, {\n    id: 'price',\n    formdata: state.formdata.price,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form_devider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }), React.createElement(FormField, {\n    id: 'brand',\n    formdata: state.formdata.brand,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }), React.createElement(FormField, {\n    id: 'shipping',\n    formdata: state.formdata.shipping,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }), React.createElement(FormField, {\n    id: 'available',\n    formdata: state.formdata.available,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form_devider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }), React.createElement(FormField, {\n    id: 'wood',\n    formdata: state.formdata.wood,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }), React.createElement(FormField, {\n    id: 'strings',\n    formdata: state.formdata.strings,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }), React.createElement(FormField, {\n    id: 'publish',\n    formdata: state.formdata.publish,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, state.formError && React.createElement(\"div\", {\n    className: \"error_label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, \"Something is wrong, please check your data.\"), state.formSuccess && React.createElement(\"div\", {\n    className: \"form_success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, \"Product saved successfully!\"), React.createElement(\"button\", {\n    onClick: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, \"Add product\")))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    product: state.product\n  };\n};\n\nexport default connect(mapStateToProps)(AddProduct);","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/User/Admin/addProduct.jsx"],"names":["React","useState","useEffect","UserLayout","FormField","FileUpload","updateField","generateData","resetFields","populateOptionFields","isFormValid","connect","getBrands","getWoods","addProduct","clearProduct","AddProduct","props","formError","formSuccess","formdata","name","element","value","config","label","type","placeholder","validation","required","valid","touched","validationMessage","showLabel","description","price","brand","options","shipping","key","available","wood","strings","publish","images","state","setState","dispatch","product","brands","woods","handleChange","el","handleSubmit","e","preventDefault","dataToSubmit","formIsValid","error","handleResetFields","newFormData","setTimeout","imagesHandler","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport UserLayout from '../../../hoc/user';\nimport FormField from '../../shared/formField';\nimport FileUpload from '../../shared/fileUpload';\nimport {\n  updateField,\n  generateData,\n  resetFields,\n  populateOptionFields,\n  isFormValid\n} from '../../../utils/formActions';\nimport { connect } from 'react-redux';\nimport {\n  getBrands,\n  getWoods,\n  addProduct,\n  clearProduct\n} from '../../../store/actions/productActions';\n\nconst AddProduct = props => {\n  const [state, setState] = useState({\n    formError: false,\n    formSuccess: false,\n    formdata: {\n      name: {\n        element: 'input',\n        value: '',\n        config: {\n          label: 'Product name',\n          name: 'name_input',\n          type: 'text',\n          placeholder: 'Enter name'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      description: {\n        element: 'textarea',\n        value: '',\n        config: {\n          label: 'Product description',\n          name: 'description_input',\n          type: 'text',\n          placeholder: 'Enter description'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      price: {\n        element: 'input',\n        value: '',\n        config: {\n          label: 'Product price',\n          name: 'price_input',\n          type: 'number',\n          placeholder: 'Enter price'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      brand: {\n        element: 'select',\n        value: '',\n        config: {\n          label: 'Product brand',\n          name: 'brand_input',\n          options: []\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      shipping: {\n        element: 'select',\n        value: '',\n        config: {\n          label: 'Shipping',\n          name: 'shipping_input',\n          options: [{ key: true, value: 'Yes' }, { key: false, value: 'No' }]\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      available: {\n        element: 'select',\n        value: '',\n        config: {\n          label: 'Available in stock',\n          name: 'available_input',\n          options: [{ key: true, value: 'Yes' }, { key: false, value: 'No' }]\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      wood: {\n        element: 'select',\n        value: '',\n        config: {\n          label: 'Wood material',\n          name: 'wood_input',\n          options: []\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      strings: {\n        element: 'select',\n        value: '',\n        config: {\n          label: 'Strings number',\n          name: 'strings_input',\n          options: [\n            { key: 4, value: 4 },\n            { key: 5, value: 5 },\n            { key: 6, value: 6 },\n            { key: 8, value: 8 }\n          ]\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      publish: {\n        element: 'select',\n        value: '',\n        config: {\n          label: 'Published',\n          name: 'publish_input',\n          options: [\n            { key: true, value: 'Public' },\n            { key: false, value: 'Hidden' }\n          ]\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: '',\n        showLabel: true\n      },\n      images: {\n        value: [],\n        validation: {\n          required: false\n        },\n        valid: true,\n        touched: false,\n        validationMessage: '',\n        showLabel: false\n      }\n    }\n  });\n\n  useEffect(() => {\n    props.dispatch(getBrands());\n    props.dispatch(getWoods());\n  }, []);\n\n  const formdata = state.formdata;\n  populateOptionFields(formdata, props.product.brands, 'brand');\n  populateOptionFields(formdata, props.product.woods, 'wood');\n\n  const handleChange = el => {\n    const formdata = updateField(el, state.formdata, 'products');\n    setState({\n      ...state,\n      formError: false,\n      formdata\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let dataToSubmit = generateData(state.formdata, 'products');\n    let formIsValid = isFormValid(state.formdata, 'products');\n\n    if (formIsValid) {\n      try {\n        props.dispatch(addProduct(dataToSubmit));\n      } catch (error) {\n        setState({\n          ...state,\n          formError: true\n        });\n        return;\n      }\n      handleResetFields();\n    } else {\n      setState({\n        ...state,\n        formError: true\n      });\n    }\n  };\n\n  const handleResetFields = () => {\n      const newFormData = resetFields(state.formdata, 'products');\n    setState({\n      ...state,\n      formdata: newFormData,\n      formSuccess: true\n    });\n    setTimeout(() => {\n      setState({\n        ...state,\n        formSuccess: false\n      });\n      props.dispatch(clearProduct());\n    }, 3000);\n  };\n\n  const imagesHandler = images => {\n    const newFormData = {\n      ...state.formdata\n    }\n    newFormData['images'].value = images;\n    newFormData['images'].valid = true;\n\n    setState({\n      ...state,\n      formdata: newFormData\n    })\n  }\n\n  return (\n    <UserLayout>\n      <div>\n        <h1>Add product</h1>\n        <form onSubmit={e => handleSubmit(e)}>\n          <FileUpload\n            imgHandler={images => imagesHandler(images)}\n            reset={state.formSuccess}\n          />\n\n          <FormField\n            id={'name'}\n            formdata={state.formdata.name}\n            onchange={el => handleChange(el)}\n          />\n          <FormField\n            id={'description'}\n            formdata={state.formdata.description}\n            onchange={el => handleChange(el)}\n          />\n          <FormField\n            id={'price'}\n            formdata={state.formdata.price}\n            onchange={el => handleChange(el)}\n          />\n\n          <div className=\"form_devider\" />\n\n          <FormField\n            id={'brand'}\n            formdata={state.formdata.brand}\n            onchange={el => handleChange(el)}\n          />\n          <FormField\n            id={'shipping'}\n            formdata={state.formdata.shipping}\n            onchange={el => handleChange(el)}\n          />\n          <FormField\n            id={'available'}\n            formdata={state.formdata.available}\n            onchange={el => handleChange(el)}\n          />\n\n          <div className=\"form_devider\" />\n\n          <FormField\n            id={'wood'}\n            formdata={state.formdata.wood}\n            onchange={el => handleChange(el)}\n          />\n          <FormField\n            id={'strings'}\n            formdata={state.formdata.strings}\n            onchange={el => handleChange(el)}\n          />\n          <FormField\n            id={'publish'}\n            formdata={state.formdata.publish}\n            onchange={el => handleChange(el)}\n          />\n          <div>\n            {state.formError && (\n              <div className=\"error_label\">\n                Something is wrong, please check your data.\n              </div>\n            )}\n            {state.formSuccess && (\n              <div className=\"form_success\">Product saved successfully!</div>\n            )}\n            <button onClick={e => handleSubmit(e)}>Add product</button>\n          </div>\n        </form>\n      </div>\n    </UserLayout>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    product: state.product\n  };\n};\n\nexport default connect(mapStateToProps)(AddProduct);\n"]},"metadata":{},"sourceType":"module"}