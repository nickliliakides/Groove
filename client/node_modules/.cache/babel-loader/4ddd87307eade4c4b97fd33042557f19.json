{"ast":null,"code":"import _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/Product/productImg.jsx\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport ImageLightbox from '../shared/lightbox';\n\nconst ProductImg = props => {\n  const _useState = useState({\n    lightboxImages: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    let lightboxImages = [];\n\n    if (props.detail.images.length > 0) {\n      props.detail.images.forEach(item => {\n        lightboxImages.push(item.url);\n      });\n    }\n\n    setState({\n      lightboxImages\n    });\n  }, [props.detail.images]);\n\n  const renderItemImg = images => {\n    if (images.length > 0) {\n      return images[0].url;\n    } else {\n      return '/images/image_not_available.png';\n    }\n  }; // const openLightboxOnSlide = pos => { \n  //   setLightboxController({\n  //   ...lightboxController,\n  //   toggler: !lightboxController.toggler, \n  //   slide: pos,\n  //   }); \n  //   }\n  // const handleLightBox = pos => {\n  //   if(state.lightboxImages.length > 0) {\n  //     setState({\n  //       ...state,\n  //       lightbox: true,\n  //       imagePos: pos\n  //     }\n  //   }\n  // }\n  // const handleCloseLightBox = () => {\n  //   setState({\n  //     ...state,\n  //     lightbox: false\n  //   })\n  // }\n\n\n  const showThumbs = () => lightboxController.lightboxImages.map((item, i) => i > 0 && React.createElement(Fragment, {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"thumb\",\n    onClick: () => openLightboxOnSlide(i + 1),\n    style: {\n      background: \"url(\".concat(item, \") no-repeat\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(ImageLightbox, {\n    images: state.lightboxImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n\n  const detail = props.detail;\n  console.log(lightboxController.lightboxImages);\n  return React.createElement(\"div\", {\n    className: \"product_image_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main_pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background: \"url(\".concat(renderItemImg(detail.images), \") no-repeat\")\n    },\n    onClick: () => openLightboxOnSlide(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"main_thumbs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, showThumbs()));\n};\n\nexport default ProductImg;","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/Product/productImg.jsx"],"names":["React","useState","useEffect","Fragment","ImageLightbox","ProductImg","props","lightboxImages","state","setState","detail","images","length","forEach","item","push","url","renderItemImg","showThumbs","lightboxController","map","i","openLightboxOnSlide","background","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,QAApC,QAAoD,OAApD;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA,oBAEAL,QAAQ,CAAC;AACjCM,IAAAA,cAAc,EAAE;AADiB,GAAD,CAFR;AAAA;AAAA,QAEnBC,KAFmB;AAAA,QAEZC,QAFY;;AAM1BP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,cAAc,GAAG,EAArB;;AACA,QAAGD,KAAK,CAACI,MAAN,CAAaC,MAAb,CAAoBC,MAApB,GAA6B,CAAhC,EAAkC;AAEhCN,MAAAA,KAAK,CAACI,MAAN,CAAaC,MAAb,CAAoBE,OAApB,CAA4BC,IAAI,IAAI;AAClCP,QAAAA,cAAc,CAACQ,IAAf,CAAoBD,IAAI,CAACE,GAAzB;AACD,OAFD;AAGD;;AAEDP,IAAAA,QAAQ,CAAC;AACPF,MAAAA;AADO,KAAD,CAAR;AAGD,GAZQ,EAYN,CAACD,KAAK,CAACI,MAAN,CAAaC,MAAd,CAZM,CAAT;;AAcA,QAAMM,aAAa,GAAGN,MAAM,IAAI;AAC9B,QAAGA,MAAM,CAACC,MAAP,GAAgB,CAAnB,EAAqB;AACnB,aAAOD,MAAM,CAAC,CAAD,CAAN,CAAUK,GAAjB;AACD,KAFD,MAEO;AACL,aAAO,iCAAP;AACD;AACF,GAND,CApB0B,CA4B1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAME,UAAU,GAAG,MACjBC,kBAAkB,CAACZ,cAAnB,CAAkCa,GAAlC,CAAsC,CAACN,IAAD,EAAMO,CAAN,KACpCA,CAAC,GAAG,CAAJ,IACA,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,OAAO,EAAE,MAAMC,mBAAmB,CAACD,CAAC,GAAC,CAAH,CAFpC;AAGE,IAAA,KAAK,EAAE;AAACE,MAAAA,UAAU,gBAAST,IAAT;AAAX,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAOA,oBAAC,aAAD;AACE,IAAA,MAAM,EAAEN,KAAK,CAACD,cADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CAFF,CADF;;AArD0B,QAqEnBG,MArEmB,GAqETJ,KArES,CAqEnBI,MArEmB;AAsE1Bc,EAAAA,OAAO,CAACC,GAAR,CAAYN,kBAAkB,CAACZ,cAA/B;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AAACgB,MAAAA,UAAU,gBAASN,aAAa,CAACP,MAAM,CAACC,MAAR,CAAtB;AAAX,KADT;AAEE,IAAA,OAAO,EAAE,MAAMW,mBAAmB,CAAC,CAAD,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UAAU,EADb,CARF,CADF;AAeD,CAvFD;;AAyFA,eAAeb,UAAf","sourcesContent":["import React,{ useState, useEffect, Fragment } from 'react'\nimport ImageLightbox from '../shared/lightbox';\n\nconst ProductImg = props => {\n\n  const [state, setState] = useState({ \n    lightboxImages: []\n    });\n\n  useEffect(() => {\n    let lightboxImages = [];\n    if(props.detail.images.length > 0){\n      \n      props.detail.images.forEach(item => {\n        lightboxImages.push(item.url)\n      })\n    }\n\n    setState({\n      lightboxImages\n    })\n  }, [props.detail.images])\n\n  const renderItemImg = images => {\n    if(images.length > 0){\n      return images[0].url\n    } else {\n      return '/images/image_not_available.png'\n    }\n  }\n\n  // const openLightboxOnSlide = pos => { \n  //   setLightboxController({\n  //   ...lightboxController,\n  //   toggler: !lightboxController.toggler, \n  //   slide: pos,\n  //   }); \n  //   }\n\n  // const handleLightBox = pos => {\n  //   if(state.lightboxImages.length > 0) {\n  //     setState({\n  //       ...state,\n  //       lightbox: true,\n  //       imagePos: pos\n  //     }\n  //   }\n  // }\n\n  // const handleCloseLightBox = () => {\n  //   setState({\n  //     ...state,\n  //     lightbox: false\n  //   })\n  // }\n\n  const showThumbs = () => (\n    lightboxController.lightboxImages.map((item,i) => (\n      i > 0 && \n      <Fragment key={i}>\n      <div\n        className=\"thumb\"\n        onClick={() => openLightboxOnSlide(i+1)}\n        style={{background: `url(${item}) no-repeat`}}\n      >\n      </div>\n      <ImageLightbox  \n        images={state.lightboxImages} \n    /></Fragment>\n    ))\n  )\n\n  const {detail} = props;\n  console.log(lightboxController.lightboxImages)\n\n  return (\n    <div className=\"product_image_container\">\n      <div className=\"main_pic\">\n        <div\n          style={{background: `url(${renderItemImg(detail.images)}) no-repeat`}}\n          onClick={() => openLightboxOnSlide(1)}\n        >\n        </div>\n      </div>\n      <div className=\"main_thumbs\">\n        {showThumbs()}\n\n      </div>\n    </div>\n  )\n}\n\nexport default ProductImg\n"]},"metadata":{},"sourceType":"module"}