{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/User/updateUserInfo.jsx\";\nimport React, { useState } from 'react';\nimport FormField from '../shared/formField';\nimport Dialog from '@material-ui/core/Dialog';\nimport { updateField, generateData, isFormValid } from '../../utils/formActions';\nimport { connect } from 'react-redux';\n\nconst UpdateUserInfo = () => {\n  const _useState = useState({\n    formError: false,\n    formSuccess: false,\n    formdata: {\n      name: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'name_input',\n          type: 'text',\n          placeholder: 'Enter your name'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: ''\n      },\n      lastname: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'lastname_input',\n          type: 'text',\n          placeholder: 'Enter your lastname'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: ''\n      },\n      email: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'email_input',\n          type: 'email',\n          placeholder: 'Enter your email'\n        },\n        validation: {\n          required: true,\n          email: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: ''\n      }\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleChange = el => {\n    const formdata = updateField(el, state.formdata, 'update_user');\n    setState(_objectSpread({}, state, {\n      formError: false,\n      formdata\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let dataToSubmit = generateData(state.formdata, 'update_user');\n    let formIsValid = isFormValid(state.formdata, 'update_user');\n\n    if (formIsValid) {\n      props.dispatch(registerUser(dataToSubmit)).then(res => {\n        if (res.payload.success) {\n          setState(_objectSpread({}, state, {\n            formError: false,\n            formSuccess: true\n          }));\n          setTimeout(() => {\n            props.history.push('/register_login');\n          }, 3000);\n        } else {\n          setState(_objectSpread({}, state, {\n            formError: true\n          }));\n        }\n      }).catch(err => {\n        setState(_objectSpread({}, state, {\n          formError: true\n        }));\n      });\n    } else {\n      setState(_objectSpread({}, state, {\n        formError: true\n      }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"User Info\");\n};\n\nexport default UpdateUserInfo;","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/User/updateUserInfo.jsx"],"names":["React","useState","FormField","Dialog","updateField","generateData","isFormValid","connect","UpdateUserInfo","formError","formSuccess","formdata","name","element","value","config","type","placeholder","validation","required","valid","touched","validationMessage","lastname","email","state","setState","handleChange","el","handleSubmit","e","preventDefault","dataToSubmit","formIsValid","props","dispatch","registerUser","then","res","payload","success","setTimeout","history","push","catch","err"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport FormField from '../shared/formField';\nimport Dialog from '@material-ui/core/Dialog'\nimport{ updateField, generateData, isFormValid } from '../../utils/formActions'\nimport { connect } from 'react-redux'\n\n\nconst UpdateUserInfo = () => {\n\n  const [state, setState] = useState({\n    formError: false,\n    formSuccess: false,\n    formdata: {\n      name: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'name_input',\n          type: 'text',\n          placeholder: 'Enter your name'\n        },\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n        validationMessage: ''\n      },\n      lastname: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'lastname_input',\n          type: 'text',\n          placeholder: 'Enter your lastname'\n        },\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n        validationMessage: ''\n      },\n      email: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'email_input',\n          type: 'email',\n          placeholder: 'Enter your email'\n        },\n        validation: {\n          required: true,\n          email: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: ''\n      }\n    }\n  })\n\n\n  const handleChange = el => {\n    const formdata = updateField(el, state.formdata, 'update_user');\n    setState({\n      ...state,\n      formError: false,\n      formdata\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let dataToSubmit = generateData(state.formdata, 'update_user');\n    let formIsValid = isFormValid(state.formdata, 'update_user');\n\n    if(formIsValid){\n      props.dispatch(registerUser(dataToSubmit)).then(res => {\n        if(res.payload.success){\n          setState({\n            ...state,\n            formError: false,\n            formSuccess: true\n          });\n          setTimeout(() => {\n            props.history.push('/register_login');\n          },3000)\n        } else {\n          setState({ ...state, formError: true })\n        }\n      }).catch(err => {\n        setState({ ...state, formError: true })\n      })\n    } else {\n      setState({\n        ...state,\n        formError: true\n      })\n    }\n  }\n\n  return (\n    <div>\n      User Info\n    </div>\n  )\n}\n\nexport default UpdateUserInfo\n"]},"metadata":{},"sourceType":"module"}