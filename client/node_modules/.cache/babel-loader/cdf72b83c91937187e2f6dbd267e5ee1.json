{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/shared/lightbox.jsx\";\nimport React, { Component } from 'react'; // import Lightbox from 'react-images'\n\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nclass ImageLightbox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalIsOpen: false,\n      // currentImage: this.props.pos,\n      images: []\n    };\n\n    this.toggleModal = () => {\n      this.setState(state => _objectSpread({}, this.state, {\n        modalIsOpen: !state.modalIsOpen\n      }));\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.images) {\n      const images = [];\n      props.images.forEach(img => {\n        images.push({\n          src: \"\".concat(img)\n        });\n      });\n      return state = _objectSpread({}, state, {\n        images\n      });\n    }\n\n    return false;\n  } //  closeLightbox = () => {\n  //   this.props.onclose();\n  // }\n  //  gotoPrevious = () => {\n  // }\n  //  gotoNext = () => {\n  // }\n\n\n  render() {\n    console.log(this.state);\n    return React.createElement(ModalGateway, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.modalIsOpen && React.createElement(Modal, {\n      onClose: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Carousel, {\n      views: this.state.images,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))) // <Lightbox \n    //   currentImage={this.state.currentImage}\n    //   images={this.state.images}\n    //   isOpen={this.state.lightboxIsOpen}\n    //   onClickPrev={() => this.gotoPrevious()}\n    //   onClickNext={() => this.gotoNext()}\n    //   onClose={() => this.closeLightbox()}\n    // />\n    ;\n  }\n\n}\n\nexport default ImageLightbox;","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/shared/lightbox.jsx"],"names":["React","Component","Carousel","Modal","ModalGateway","ImageLightbox","state","modalIsOpen","images","toggleModal","setState","getDerivedStateFromProps","props","forEach","img","push","src","render","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,QAAP,IAAmBC,KAAnB,EAA0BC,YAA1B,QAA8C,cAA9C;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCK,KAFoC,GAE5B;AACNC,MAAAA,WAAW,EAAE,KADP;AAEN;AACAC,MAAAA,MAAM,EAAE;AAHF,KAF4B;;AAAA,SAoCpCC,WApCoC,GAoCtB,MAAM;AAClB,WAAKC,QAAL,CAAcJ,KAAK,sBAAU,KAAKA,KAAf;AAAsBC,QAAAA,WAAW,EAAE,CAACD,KAAK,CAACC;AAA1C,QAAnB;AACD,KAtCmC;AAAA;;AAQpC,SAAOI,wBAAP,CAAgCC,KAAhC,EAAuCN,KAAvC,EAA6C;AAC3C,QAAGM,KAAK,CAACJ,MAAT,EAAgB;AACd,YAAMA,MAAM,GAAG,EAAf;AACAI,MAAAA,KAAK,CAACJ,MAAN,CAAaK,OAAb,CAAqBC,GAAG,IAAI;AAC1BN,QAAAA,MAAM,CAACO,IAAP,CAAY;AAACC,UAAAA,GAAG,YAAKF,GAAL;AAAJ,SAAZ;AACD,OAFD;AAIA,aAAOR,KAAK,qBACPA,KADO;AAEVE,QAAAA;AAFU,QAAZ;AAID;;AAED,WAAO,KAAP;AACD,GAtBmC,CAwBpC;AACA;AACA;AAEA;AAEA;AAEA;AAEA;;;AAMAS,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACA,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,KAAL,CAAWC,WAAX,IACC,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKE,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CADF,CAQE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfF;AAiBD;;AA3DmC;;AA8DtC,eAAeH,aAAf","sourcesContent":["import React,{ Component } from 'react'\n// import Lightbox from 'react-images'\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nclass ImageLightbox extends Component {\n\n  state = {\n    modalIsOpen: false,\n    // currentImage: this.props.pos,\n    images: []\n  }\n \n  static getDerivedStateFromProps(props, state){\n    if(props.images){\n      const images = [];\n      props.images.forEach(img => {\n        images.push({src: `${img}`})\n      });\n    \n      return state = {\n        ...state,\n        images\n      }\n    }\n\n    return false;\n  }\n\n  //  closeLightbox = () => {\n  //   this.props.onclose();\n  // }\n\n  //  gotoPrevious = () => {\n\n  // }\n\n  //  gotoNext = () => {\n    \n  // }\n\n  toggleModal = () => {\n    this.setState(state => ({ ...this.state, modalIsOpen: !state.modalIsOpen }));\n  };\n\n  render(){\n    console.log(this.state);\n    return (\n      <ModalGateway>\n        {this.state.modalIsOpen && (\n          <Modal onClose={this.toggleModal}>\n            <Carousel views={this.state.images} />\n          </Modal>\n        )}\n      </ModalGateway>\n      // <Lightbox \n      //   currentImage={this.state.currentImage}\n      //   images={this.state.images}\n      //   isOpen={this.state.lightboxIsOpen}\n      //   onClickPrev={() => this.gotoPrevious()}\n      //   onClickNext={() => this.gotoNext()}\n      //   onClose={() => this.closeLightbox()}\n      // />\n    )\n  }\n}\n\nexport default ImageLightbox\n"]},"metadata":{},"sourceType":"module"}