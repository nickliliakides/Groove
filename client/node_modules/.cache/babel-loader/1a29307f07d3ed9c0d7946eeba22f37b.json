{"ast":null,"code":"import _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/shared/lightbox.jsx\";\nimport React, { useState, useEffect } from 'react'; // import Lightbox from 'react-images'\n// import Carousel, { Modal, ModalGateway } from 'react-images';\n\nimport FsLightbox from 'fslightbox-react';\n\nconst ImageLightbox = props => {\n  // const [state, setState] = useState({\n  //   modalIsOpen: true,\n  //   images: []\n  // })\n  const _useState = useState({\n    toggler: false,\n    slide: 1\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        lightboxController = _useState2[0],\n        setLightboxController = _useState2[1];\n\n  function openLightboxOnSlide(pos) {\n    setLightboxController({\n      toggler: !lightboxController.toggler,\n      slide: pos\n    });\n  } // useEffect(() => {\n  //     const images = [];\n  //     props.images.forEach(img => {\n  //       images.push({src: `${img}`})\n  //     });\n  //     setState({...state, images})\n  // }, [props.images])\n  // const toggleModal = () => {\n  //   setState({ ...state, modalIsOpen: !state.modalIsOpen });\n  // };\n\n\n  console.log(state);\n  return props.images.map((img, i) => React.createElement(\"a\", {\n    onClick: () => openLightboxOnSlide(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))) // <ModalGateway>\n  //   {state.modalIsOpen && (\n  //     <Modal onClose={toggleModal}>\n  //       <Carousel views={state.images} />\n  //     </Modal>\n  //   )}\n  // </ModalGateway>\n  // <Lightbox \n  //   currentImage={this.state.currentImage}\n  //   images={this.state.images}\n  //   isOpen={this.state.lightboxIsOpen}\n  //   onClickPrev={() => this.gotoPrevious()}\n  //   onClickNext={() => this.gotoNext()}\n  //   onClose={() => this.closeLightbox()}\n  // />\n  ;\n};\n\nexport default ImageLightbox;","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/shared/lightbox.jsx"],"names":["React","useState","useEffect","FsLightbox","ImageLightbox","props","toggler","slide","lightboxController","setLightboxController","openLightboxOnSlide","pos","console","log","state","images","map","img","i"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C,C,CACA;AACA;;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAE7B;AACA;AACA;AACA;AAL6B,oBAMuBJ,QAAQ,CAAC;AAC3DK,IAAAA,OAAO,EAAE,KADkD;AAE3DC,IAAAA,KAAK,EAAE;AAFoD,GAAD,CAN/B;AAAA;AAAA,QAMtBC,kBANsB;AAAA,QAMFC,qBANE;;AAW3B,WAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AAChCF,IAAAA,qBAAqB,CAAC;AACtBH,MAAAA,OAAO,EAAE,CAACE,kBAAkB,CAACF,OADP;AAEtBC,MAAAA,KAAK,EAAEI;AAFe,KAAD,CAArB;AAIC,GAhBwB,CAkB7B;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEE,SACET,KAAK,CAACU,MAAN,CAAaC,GAAb,CAAiB,CAACC,GAAD,EAAKC,CAAL,KACf;AAAG,IAAA,OAAO,EAAG,MAAMR,mBAAmB,CAACQ,CAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAME;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBF;AAsBD,CAzDH;;AA2DA,eAAeb,aAAf","sourcesContent":["import React,{ useState, useEffect } from 'react'\n// import Lightbox from 'react-images'\n// import Carousel, { Modal, ModalGateway } from 'react-images';\nimport FsLightbox from 'fslightbox-react';\n\nconst ImageLightbox = props => {\n\n  // const [state, setState] = useState({\n  //   modalIsOpen: true,\n  //   images: []\n  // })\n  const [lightboxController, setLightboxController] = useState({ \n    toggler: false, \n    slide: 1,\n    });\n\n    function openLightboxOnSlide(pos) { \n      setLightboxController({ \n      toggler: !lightboxController.toggler, \n      slide: pos, \n      }); \n      }\n\n  // useEffect(() => {\n\n  //     const images = [];\n  //     props.images.forEach(img => {\n  //       images.push({src: `${img}`})\n  //     });\n  //     setState({...state, images})\n    \n  // }, [props.images])\n  \n\n  // const toggleModal = () => {\n  //   setState({ ...state, modalIsOpen: !state.modalIsOpen });\n  // };\n\n  console.log(state)\n\n    return (\n      props.images.map((img,i) => (\n        <a onClick={ () => openLightboxOnSlide(i) }> \n          <img src={img}/> \n        </a>\n      ))\n      // <ModalGateway>\n      //   {state.modalIsOpen && (\n      //     <Modal onClose={toggleModal}>\n      //       <Carousel views={state.images} />\n      //     </Modal>\n      //   )}\n      // </ModalGateway>\n      // <Lightbox \n      //   currentImage={this.state.currentImage}\n      //   images={this.state.images}\n      //   isOpen={this.state.lightboxIsOpen}\n      //   onClickPrev={() => this.gotoPrevious()}\n      //   onClickNext={() => this.gotoNext()}\n      //   onClose={() => this.closeLightbox()}\n      // />\n    )\n  }\n\nexport default ImageLightbox\n"]},"metadata":{},"sourceType":"module"}