{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_PRODUCTS_BY_SELL, GET_PRODUCTS_BY_ARRIVAL, GET_FILTERED_PRODUCTS, GET_BRANDS, ADD_BRAND, REMOVE_BRAND, GET_WOODS, ADD_WOOD, REMOVE_WOOD, ADD_PRODUCT, CLEAR_PRODUCT, ADD_IMAGE, CLEAR_IMAGE, GET_PRODUCT_BY_ID, CLEAR_PRODUCT_DETAIL, CREATE_SLIDE, CLEAR_SLIDE } from '../actions/types';\nexport default ((state = {}, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_PRODUCTS_BY_SELL:\n      return _objectSpread({}, state, {\n        itemsBySell: payload\n      });\n\n    case GET_PRODUCTS_BY_ARRIVAL:\n      return _objectSpread({}, state, {\n        itemsByArrival: payload\n      });\n\n    case GET_FILTERED_PRODUCTS:\n      return _objectSpread({}, state, {\n        items: payload.products,\n        size: payload.size\n      });\n\n    case GET_BRANDS:\n      return _objectSpread({}, state, {\n        brands: payload\n      });\n\n    case ADD_BRAND:\n      return _objectSpread({}, state, {\n        addedBrand: payload.success,\n        brands: payload.brands\n      });\n\n    case REMOVE_BRAND:\n      return _objectSpread({}, state, {\n        removedBrand: payload.success,\n        brands: state.brands.filter(b => b._id !== payload.brand._id)\n      });\n\n    case GET_WOODS:\n      return _objectSpread({}, state, {\n        woods: payload\n      });\n\n    case ADD_WOOD:\n      return _objectSpread({}, state, {\n        addedWood: payload.success,\n        woods: payload.woods\n      });\n\n    case REMOVE_WOOD:\n      return _objectSpread({}, state, {\n        removedWood: payload.success,\n        woods: state.woods.filter(w => w._id !== payload.wood._id)\n      });\n\n    case ADD_PRODUCT:\n      return _objectSpread({}, state, {\n        itemAdd: payload\n      });\n\n    case CLEAR_PRODUCT:\n      return _objectSpread({}, state, {\n        itemAdd: {}\n      });\n\n    case GET_PRODUCT_BY_ID:\n      return _objectSpread({}, state, {\n        item: payload\n      });\n\n    case CLEAR_PRODUCT_DETAIL:\n      return _objectSpread({}, state, {\n        item: {}\n      });\n\n    case ADD_IMAGE:\n      return _objectSpread({}, state, {\n        image: payload\n      });\n\n    case CLEAR_IMAGE:\n      return _objectSpread({}, state, {\n        image: {}\n      });\n\n    case CREATE_SLIDE:\n      return _objectSpread({}, state, {\n        slide: payload\n      });\n\n    case CLEAR_SLIDE:\n      return _objectSpread({}, state, {\n        slide: {}\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/store/reducers/productReducer.js"],"names":["GET_PRODUCTS_BY_SELL","GET_PRODUCTS_BY_ARRIVAL","GET_FILTERED_PRODUCTS","GET_BRANDS","ADD_BRAND","REMOVE_BRAND","GET_WOODS","ADD_WOOD","REMOVE_WOOD","ADD_PRODUCT","CLEAR_PRODUCT","ADD_IMAGE","CLEAR_IMAGE","GET_PRODUCT_BY_ID","CLEAR_PRODUCT_DETAIL","CREATE_SLIDE","CLEAR_SLIDE","state","action","type","payload","itemsBySell","itemsByArrival","items","products","size","brands","addedBrand","success","removedBrand","filter","b","_id","brand","woods","addedWood","removedWood","w","wood","itemAdd","item","image","slide"],"mappings":";AAAA,SACEA,oBADF,EAEEC,uBAFF,EAGEC,qBAHF,EAIEC,UAJF,EAKEC,SALF,EAMEC,YANF,EAOEC,SAPF,EAQEC,QARF,EASEC,WATF,EAUEC,WAVF,EAWEC,aAXF,EAYEC,SAZF,EAaEC,WAbF,EAcEC,iBAdF,EAeEC,oBAfF,EAgBEC,YAhBF,EAiBEC,WAjBF,QAkBO,kBAlBP;AAoBA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAAA,QAC7BC,IAD6B,GACXD,MADW,CAC7BC,IAD6B;AAAA,QACvBC,OADuB,GACXF,MADW,CACvBE,OADuB;;AAErC,UAAQD,IAAR;AACE,SAAKnB,oBAAL;AACE,+BAAYiB,KAAZ;AAAmBI,QAAAA,WAAW,EAAED;AAAhC;;AACF,SAAKnB,uBAAL;AACE,+BAAYgB,KAAZ;AAAmBK,QAAAA,cAAc,EAAEF;AAAnC;;AACF,SAAKlB,qBAAL;AACE,+BAAYe,KAAZ;AAAmBM,QAAAA,KAAK,EAAEH,OAAO,CAACI,QAAlC;AAA4CC,QAAAA,IAAI,EAAEL,OAAO,CAACK;AAA1D;;AACF,SAAKtB,UAAL;AACE,+BAAYc,KAAZ;AAAmBS,QAAAA,MAAM,EAAEN;AAA3B;;AACF,SAAKhB,SAAL;AACE,+BAAYa,KAAZ;AAAmBU,QAAAA,UAAU,EAACP,OAAO,CAACQ,OAAtC;AAA+CF,QAAAA,MAAM,EAAEN,OAAO,CAACM;AAA/D;;AACF,SAAKrB,YAAL;AACE,+BAAYY,KAAZ;AAAmBY,QAAAA,YAAY,EAACT,OAAO,CAACQ,OAAxC;AAAiDF,QAAAA,MAAM,EAAET,KAAK,CAACS,MAAN,CAAaI,MAAb,CAAoBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUZ,OAAO,CAACa,KAAR,CAAcD,GAAjD;AAAzD;;AACF,SAAK1B,SAAL;AACE,+BAAYW,KAAZ;AAAmBiB,QAAAA,KAAK,EAAEd;AAA1B;;AACF,SAAKb,QAAL;AACE,+BAAYU,KAAZ;AAAmBkB,QAAAA,SAAS,EAACf,OAAO,CAACQ,OAArC;AAA8CM,QAAAA,KAAK,EAAEd,OAAO,CAACc;AAA7D;;AACF,SAAK1B,WAAL;AACE,+BAAYS,KAAZ;AAAmBmB,QAAAA,WAAW,EAAChB,OAAO,CAACQ,OAAvC;AAAgDM,QAAAA,KAAK,EAAEjB,KAAK,CAACiB,KAAN,CAAYJ,MAAZ,CAAmBO,CAAC,IAAIA,CAAC,CAACL,GAAF,KAAUZ,OAAO,CAACkB,IAAR,CAAaN,GAA/C;AAAvD;;AACF,SAAKvB,WAAL;AACE,+BAAYQ,KAAZ;AAAmBsB,QAAAA,OAAO,EAAEnB;AAA5B;;AACF,SAAKV,aAAL;AACE,+BAAYO,KAAZ;AAAmBsB,QAAAA,OAAO,EAAE;AAA5B;;AACF,SAAK1B,iBAAL;AACE,+BAAYI,KAAZ;AAAmBuB,QAAAA,IAAI,EAAEpB;AAAzB;;AACF,SAAKN,oBAAL;AACE,+BAAYG,KAAZ;AAAmBuB,QAAAA,IAAI,EAAE;AAAzB;;AACF,SAAK7B,SAAL;AACE,+BAAYM,KAAZ;AAAmBwB,QAAAA,KAAK,EAAErB;AAA1B;;AACF,SAAKR,WAAL;AACE,+BAAYK,KAAZ;AAAmBwB,QAAAA,KAAK,EAAE;AAA1B;;AACF,SAAK1B,YAAL;AACE,+BAAYE,KAAZ;AAAmByB,QAAAA,KAAK,EAAEtB;AAA1B;;AACF,SAAKJ,WAAL;AACE,+BAAYC,KAAZ;AAAmByB,QAAAA,KAAK,EAAE;AAA1B;;AACF;AACE,aAAOzB,KAAP;AApCJ;AAsCD,CAxCD","sourcesContent":["import {\n  GET_PRODUCTS_BY_SELL,\n  GET_PRODUCTS_BY_ARRIVAL,\n  GET_FILTERED_PRODUCTS,\n  GET_BRANDS,\n  ADD_BRAND,\n  REMOVE_BRAND,\n  GET_WOODS,\n  ADD_WOOD,\n  REMOVE_WOOD,\n  ADD_PRODUCT,\n  CLEAR_PRODUCT,\n  ADD_IMAGE,\n  CLEAR_IMAGE,\n  GET_PRODUCT_BY_ID,\n  CLEAR_PRODUCT_DETAIL,\n  CREATE_SLIDE,\n  CLEAR_SLIDE\n} from '../actions/types';\n\nexport default (state = {}, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_PRODUCTS_BY_SELL:\n      return { ...state, itemsBySell: payload };\n    case GET_PRODUCTS_BY_ARRIVAL:\n      return { ...state, itemsByArrival: payload };\n    case GET_FILTERED_PRODUCTS:\n      return { ...state, items: payload.products, size: payload.size };\n    case GET_BRANDS:\n      return { ...state, brands: payload };\n    case ADD_BRAND:\n      return { ...state, addedBrand:payload.success, brands: payload.brands };\n    case REMOVE_BRAND:\n      return { ...state, removedBrand:payload.success, brands: state.brands.filter(b => b._id !== payload.brand._id) };\n    case GET_WOODS:\n      return { ...state, woods: payload };\n    case ADD_WOOD:\n      return { ...state, addedWood:payload.success, woods: payload.woods };\n    case REMOVE_WOOD:\n      return { ...state, removedWood:payload.success, woods: state.woods.filter(w => w._id !== payload.wood._id) };\n    case ADD_PRODUCT:\n      return { ...state, itemAdd: payload };\n    case CLEAR_PRODUCT:\n      return { ...state, itemAdd: {} };\n    case GET_PRODUCT_BY_ID:\n      return { ...state, item: payload };\n    case CLEAR_PRODUCT_DETAIL:\n      return { ...state, item: {} };\n    case ADD_IMAGE:\n      return { ...state, image: payload };\n    case CLEAR_IMAGE:\n      return { ...state, image: {} };\n    case CREATE_SLIDE:\n      return { ...state, slide: payload };\n    case CLEAR_SLIDE:\n      return { ...state, slide: {} };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}