{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/shared/formField.jsx\";\nimport React from 'react';\n\nconst FormFIeld = ({\n  id,\n  formdata,\n  onchange\n}) => {\n  const renderTemplate = () => {\n    let formTemplate = null;\n\n    switch (formdata.element) {\n      case 'input':\n        formTemplate = React.createElement(\"div\", {\n          className: \"formBlock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, formdata.showLabel && React.createElement(\"div\", {\n          className: \"label_inputs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, formdata.config.label), React.createElement(\"input\", Object.assign({}, formdata.config, {\n          value: formdata.value,\n          onBlur: e => onchange({\n            e,\n            id,\n            blur: true\n          }),\n          onChange: e => onchange({\n            e,\n            id\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        })), showError());\n        break;\n\n      case 'textarea':\n        formTemplate = React.createElement(\"div\", {\n          className: \"formBlock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, formdata.showLabel && React.createElement(\"div\", {\n          className: \"label_inputs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, formdata.config.label), React.createElement(\"textarea\", Object.assign({}, formdata.config, {\n          value: formdata.value,\n          onBlur: e => onchange({\n            e,\n            id,\n            blur: true\n          }),\n          onChange: e => onchange({\n            e,\n            id\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        })), showError());\n        break;\n\n      case 'select':\n        formTemplate = React.createElement(\"div\", {\n          className: \"formBlock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, formdata.showLabel && React.createElement(\"div\", {\n          className: \"label_inputs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, formdata.config.label), React.createElement(\"select\", {\n          value: formdata.value,\n          onBlur: e => onchange({\n            e,\n            id,\n            blur: true\n          }),\n          onChange: e => onchange({\n            e,\n            id\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Select One\"), formdata.config.options.map(o => React.createElement(\"option\", {\n          key: o.key,\n          value: o.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, o.value))), showError());\n        break;\n\n      default:\n        formTemplate = null;\n    }\n\n    return formTemplate;\n  };\n\n  const showError = () => {\n    let errorMessage = null;\n\n    if (formdata.validation && !formdata.valid) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"error_label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, formdata.validationMessage);\n    }\n\n    return errorMessage;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, renderTemplate());\n};\n\nexport default FormFIeld;","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/shared/formField.jsx"],"names":["React","FormFIeld","id","formdata","onchange","renderTemplate","formTemplate","element","showLabel","config","label","value","e","blur","showError","options","map","o","key","errorMessage","validation","valid","validationMessage"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst FormFIeld = ({ id, formdata, onchange }) => {\n  const renderTemplate = () => {\n    let formTemplate = null;\n\n    switch(formdata.element){\n      case('input'):\n        formTemplate = (\n          <div className=\"formBlock\">\n          { formdata.showLabel && \n          <div className=\"label_inputs\">{formdata.config.label}</div>}\n            <input\n              {...formdata.config}\n              value={formdata.value}\n              onBlur={ e => onchange({e,id,blur:true})}\n              onChange={ e => onchange({e,id})}\n            />\n            {showError()}\n          </div>\n        )\n      break;\n      case('textarea'):\n        formTemplate = (\n          <div className=\"formBlock\">\n          { formdata.showLabel && \n          <div className=\"label_inputs\">{formdata.config.label}</div>}\n            <textarea\n              {...formdata.config}\n              value={formdata.value}\n              onBlur={ e => onchange({e,id,blur:true})}\n              onChange={ e => onchange({e,id})}\n            />\n            {showError()}\n          </div>\n        )\n      break;\n      case('select'):\n        formTemplate = (\n          <div className=\"formBlock\">\n          { formdata.showLabel && \n          <div className=\"label_inputs\">{formdata.config.label}</div>}\n            <select\n              value={formdata.value}\n              onBlur={ e => onchange({e,id,blur:true})}\n              onChange={ e => onchange({e,id})}\n            >\n              <option value=\"\">Select One</option>\n              {\n                formdata.config.options.map(o => (\n                  <option \n                    key={o.key}\n                    value={o.key}\n                  >\n                    {o.value}\n                  </option>\n                ))\n              }\n            </select>\n            {showError()}\n          </div>\n        )\n      break;\n      default:\n        formTemplate = null;\n    }\n    return formTemplate;\n  }\n\n  const showError = () => {\n    let errorMessage = null;\n\n    if(formdata.validation && !formdata.valid){\n      errorMessage = (\n        <div className=\"error_label\">\n          {formdata.validationMessage}\n        </div>\n      )\n    }\n    return errorMessage;\n  }\n\n  return (\n    <div>\n      {renderTemplate()}\n    </div>\n  )\n}\n\nexport default FormFIeld\n"]},"metadata":{},"sourceType":"module"}