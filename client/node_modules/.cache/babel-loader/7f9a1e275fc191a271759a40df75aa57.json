{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/apple/Desktop/React/Groove/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/Register_Login/login.jsx\";\nimport React, { useState } from 'react';\nimport FormField from '../shared/formField';\nimport { updateField, generateData, isFormValid } from '../../utils/formActions';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../store/actions/userActions';\nimport { withRouter } from 'react-router-dom';\n\nconst Login = props => {\n  const _useState = useState({\n    formError: false,\n    formSuccess: '',\n    formdata: {\n      email: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'email_input',\n          type: 'email',\n          placeholder: 'Enter your email'\n        },\n        validation: {\n          required: true,\n          email: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: ''\n      },\n      password: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'password_input',\n          type: 'password',\n          placeholder: 'Enter your password'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: ''\n      }\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleChange = el => {\n    const formdata = updateField(el, state.formdata, 'login');\n    setState(_objectSpread({}, state, {\n      formError: false,\n      formdata\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let dataToSubmit = generateData(state.formdata, 'login');\n    let formIsValid = isFormValid(state.formdata, 'login');\n\n    if (formIsValid) {\n      props.dispatch(loginUser(dataToSubmit)).then(res => {\n        if (res.payload.loginSuccess) {\n          // console.log(res.payload);\n          props.history.push('/user/dashboard');\n        }\n      });\n    } else {\n      setState(_objectSpread({}, state, {\n        formError: true\n      }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"signin_wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: 'email',\n    formdata: state.formdata.email,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(FormField, {\n    id: 'password',\n    formdata: state.formdata.password,\n    onchange: el => handleChange(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), state.formError && React.createElement(\"div\", {\n    className: \"error_label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Something is wrong, please check your data.\"), React.createElement(\"button\", {\n    onClick: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Log In\")));\n};\n\nexport default connect()(withRouter(Login));","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/Register_Login/login.jsx"],"names":["React","useState","FormField","updateField","generateData","isFormValid","connect","loginUser","withRouter","Login","props","formError","formSuccess","formdata","email","element","value","config","name","type","placeholder","validation","required","valid","touched","validationMessage","password","state","setState","handleChange","el","handleSubmit","e","preventDefault","dataToSubmit","formIsValid","dispatch","then","res","payload","loginSuccess","history","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport FormField from '../shared/formField';\nimport {\n  updateField,\n  generateData,\n  isFormValid\n} from '../../utils/formActions';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../store/actions/userActions';\nimport { withRouter } from 'react-router-dom';\n\nconst Login = props => {\n  const [state, setState] = useState({\n    formError: false,\n    formSuccess: '',\n    formdata: {\n      email: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'email_input',\n          type: 'email',\n          placeholder: 'Enter your email'\n        },\n        validation: {\n          required: true,\n          email: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: ''\n      },\n      password: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'password_input',\n          type: 'password',\n          placeholder: 'Enter your password'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        validationMessage: ''\n      }\n    }\n  });\n\n  const handleChange = el => {\n    const formdata = updateField(el, state.formdata, 'login');\n    setState({\n      ...state,\n      formError: false,\n      formdata\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let dataToSubmit = generateData(state.formdata, 'login');\n    let formIsValid = isFormValid(state.formdata, 'login');\n\n    if (formIsValid) {\n      props.dispatch(loginUser(dataToSubmit)).then(res => {\n        if (res.payload.loginSuccess) {\n          // console.log(res.payload);\n          props.history.push('/user/dashboard');\n        }\n      });\n    } else {\n      setState({\n        ...state,\n        formError: true\n      });\n    }\n  };\n\n  return (\n    <div className=\"signin_wrapper\">\n      <form onSubmit={e => handleSubmit(e)}>\n        <FormField\n          id={'email'}\n          formdata={state.formdata.email}\n          onchange={el => handleChange(el)}\n        />\n        <FormField\n          id={'password'}\n          formdata={state.formdata.password}\n          onchange={el => handleChange(el)}\n        />\n        {state.formError && (\n          <div className=\"error_label\">\n            Something is wrong, please check your data.\n          </div>\n        )}\n        <button onClick={e => handleSubmit(e)}>Log In</button>\n      </form>\n    </div>\n  );\n};\n\nexport default connect()(withRouter(Login));\n"]},"metadata":{},"sourceType":"module"}