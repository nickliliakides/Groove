{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/React/Groove/client/src/components/User/cart.jsx\";\nimport React, { Component } from \"react\";\nimport UserLayout from \"../../hoc/user\";\nimport { connect } from \"react-redux\";\nimport { getBasketItems } from \"../../store/actions/userActions\";\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faFrown from \"@fortawesome/fontawesome-free-solid/faFrown\";\nimport faSmile from \"@fortawesome/fontawesome-free-solid/faSmile\";\nimport CartBlock from \"./cartBlock\";\n\nclass UserCart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      total: 0,\n      success: false,\n      amount: false\n    };\n\n    this.removeFromCart = id => {};\n\n    this.calculateTotal = data => {\n      if (data.length > 0) {\n        let total = 0;\n        data.forEach(item => {\n          total += parseInt(item.price, 10) * item.quantity;\n        });\n        return total;\n      }\n    };\n  }\n\n  componentDidMount() {\n    let cartItems = [];\n    const _props = props,\n          user = _props.user;\n    const cart = user.userData.cart;\n\n    if (cart && cart.length > 0) {\n      cart.forEach(item => {\n        cartItems.push(item.id);\n      });\n    }\n\n    props.dispatch(getBasketItems(cartItems, cart)).then(() => {\n      this.calculateTotal(user.cartData);\n    });\n  }\n\n  render() {\n    return React.createElement(UserLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"My Basket\"), React.createElement(\"div\", {\n      className: \"user_cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CartBlock, {\n      products: user,\n      type: \"cart\",\n      removeItem: id => removeFromCart(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(UserCart);","map":{"version":3,"sources":["/Users/apple/Desktop/React/Groove/client/src/components/User/cart.jsx"],"names":["React","Component","UserLayout","connect","getBasketItems","FontAwesomeIcon","faFrown","faSmile","CartBlock","UserCart","state","loading","total","success","amount","removeFromCart","id","calculateTotal","data","length","forEach","item","parseInt","price","quantity","componentDidMount","cartItems","props","user","cart","userData","push","dispatch","then","cartData","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BS,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,OAAO,EAAE,KAHH;AAINC,MAAAA,MAAM,EAAE;AAJF,KADuB;;AAAA,SAyB/BC,cAzB+B,GAyBdC,EAAE,IAAI,CAEtB,CA3B8B;;AAAA,SA6B/BC,cA7B+B,GA6BdC,IAAI,IAAI;AACvB,UAAGA,IAAI,CAACC,MAAL,GAAc,CAAjB,EAAmB;AACf,YAAIP,KAAK,GAAG,CAAZ;AAEAM,QAAAA,IAAI,CAACE,OAAL,CAAaC,IAAI,IAAI;AACnBT,UAAAA,KAAK,IAAIU,QAAQ,CAACD,IAAI,CAACE,KAAN,EAAa,EAAb,CAAR,GAA2BF,IAAI,CAACG,QAAzC;AACD,SAFD;AAGA,eAAOZ,KAAP;AACH;AACF,KAtC8B;AAAA;;AAU/Ba,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,SAAS,GAAG,EAAhB;AADkB,mBAEDC,KAFC;AAAA,UAEVC,IAFU,UAEVA,IAFU;AAAA,UAGVC,IAHU,GAGDD,IAAI,CAACE,QAHJ,CAGVD,IAHU;;AAKlB,QAAGA,IAAI,IAAIA,IAAI,CAACV,MAAL,GAAc,CAAzB,EAA2B;AACzBU,MAAAA,IAAI,CAACT,OAAL,CAAaC,IAAI,IAAI;AACnBK,QAAAA,SAAS,CAACK,IAAV,CAAeV,IAAI,CAACL,EAApB;AACD,OAFD;AAGD;;AACDW,IAAAA,KAAK,CAACK,QAAN,CAAe5B,cAAc,CAACsB,SAAD,EAAYG,IAAZ,CAA7B,EAAgDI,IAAhD,CAAqD,MAAM;AACzD,WAAKhB,cAAL,CAAoBW,IAAI,CAACM,QAAzB;AACD,KAFD;AAGD;;AAiBDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAEP,IADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,UAAU,EAAEZ,EAAE,IAAID,cAAc,CAACC,EAAD,CAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,CADF;AAcD;;AAvD8B;;AAyDhC;;AAED,MAAMoB,eAAe,GAAG1B,KAAK,IAAI;AAC/B,SAAO;AACLkB,IAAAA,IAAI,EAAElB,KAAK,CAACkB;AADP,GAAP;AAGD,CAJD;;AAMA,eAAezB,OAAO,CAACiC,eAAD,CAAP,CAAyB3B,QAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport UserLayout from \"../../hoc/user\";\nimport { connect } from \"react-redux\";\nimport { getBasketItems } from \"../../store/actions/userActions\";\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faFrown from \"@fortawesome/fontawesome-free-solid/faFrown\";\nimport faSmile from \"@fortawesome/fontawesome-free-solid/faSmile\";\nimport CartBlock from \"./cartBlock\";\n\nclass UserCart extends Component {\n  state = {\n    loading: true,\n    total: 0,\n    success: false,\n    amount: false\n  };\n\n  \n\n  componentDidMount() {\n    let cartItems = [];\n    const { user } = props;\n    const { cart } = user.userData\n    \n    if(cart && cart.length > 0){\n      cart.forEach(item => {\n        cartItems.push(item.id);\n      })\n    }\n    props.dispatch(getBasketItems(cartItems, cart)).then(() => {\n      this.calculateTotal(user.cartData)\n    })\n  }\n\n  removeFromCart = id => {\n\n  }\n\n  calculateTotal = data => {\n    if(data.length > 0){\n        let total = 0;\n\n        data.forEach(item => {\n          total += parseInt(item.price, 10) * item.quantity;\n        })\n        return total;\n    }\n  }\n\n  render() {\n    return (\n      <UserLayout>\n        <div>\n          <h1>My Basket</h1>\n          <div className=\"user_cart\">\n            <CartBlock\n              products={user}\n              type=\"cart\"\n              removeItem={id => removeFromCart(id)}\n            />\n          </div>\n        </div>\n      </UserLayout>\n    );\n  }\n \n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(UserCart);\n"]},"metadata":{},"sourceType":"module"}